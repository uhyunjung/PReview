[{"/home/songjh/Project/PReview/src/index.js":"1","/home/songjh/Project/PReview/src/reportWebVitals.js":"2","/home/songjh/Project/PReview/src/App.js":"3","/home/songjh/Project/PReview/src/Login.js":"4","/home/songjh/Project/PReview/src/Community_view_write.js":"5","/home/songjh/Project/PReview/src/Camp_review_detail.js":"6","/home/songjh/Project/PReview/src/Mypage.js":"7","/home/songjh/Project/PReview/src/Main.js":"8","/home/songjh/Project/PReview/src/Community_view_detail.js":"9","/home/songjh/Project/PReview/src/Camp_review_main.js":"10","/home/songjh/Project/PReview/src/Community_view_main.js":"11","/home/songjh/Project/PReview/src/Solution_main.js":"12","/home/songjh/Project/PReview/src/Lecture_review_main.js":"13","/home/songjh/Project/PReview/src/Lecture_review_detail.js":"14","/home/songjh/Project/PReview/src/Lecture_review_write.js":"15","/home/songjh/Project/PReview/src/Camp_review_write.js":"16","/home/songjh/Project/PReview/src/firebase.js":"17","/home/songjh/Project/PReview/src/canvasjs.react.js":"18","/home/songjh/Project/PReview/src/canvasjs.min.js":"19"},{"size":494,"mtime":1607502729989,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1607502729989,"results":"22","hashOfConfig":"21"},{"size":9742,"mtime":1608073848402,"results":"23","hashOfConfig":"21"},{"size":5869,"mtime":1608036872610,"results":"24","hashOfConfig":"21"},{"size":0,"mtime":1607745485700,"results":"25","hashOfConfig":"21"},{"size":5008,"mtime":1608034450656,"results":"26","hashOfConfig":"21"},{"size":5389,"mtime":1608064153847,"results":"27","hashOfConfig":"21"},{"size":12082,"mtime":1608074760183,"results":"28","hashOfConfig":"21"},{"size":0,"mtime":1607745485700,"results":"29","hashOfConfig":"21"},{"size":10189,"mtime":1608064153847,"results":"30","hashOfConfig":"21"},{"size":5400,"mtime":1608064153847,"results":"31","hashOfConfig":"21"},{"size":5446,"mtime":1608064153847,"results":"32","hashOfConfig":"21"},{"size":8137,"mtime":1608064121622,"results":"33","hashOfConfig":"21"},{"size":10304,"mtime":1608065358756,"results":"34","hashOfConfig":"21"},{"size":17580,"mtime":1608064153847,"results":"35","hashOfConfig":"21"},{"size":9037,"mtime":1608015755695,"results":"36","hashOfConfig":"21"},{"size":689,"mtime":1607502729989,"results":"37","hashOfConfig":"21"},{"size":2080,"mtime":1598298782000,"results":"38","hashOfConfig":"21"},{"size":479376,"mtime":1607575701000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1s8ee8w",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/songjh/Project/PReview/src/index.js",[],["86","87"],"/home/songjh/Project/PReview/src/reportWebVitals.js",[],"/home/songjh/Project/PReview/src/App.js",["88","89","90","91"],"/home/songjh/Project/PReview/src/Login.js",["92","93","94","95","96","97","98"],"import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { Grid, Paper, Button } from '@material-ui/core';\nimport { db } from './firebase';\n\nconst Login = () => {\n  const [user, setUser] = React.useState(\"\");\n  const [name, setName] = React.useState(\"\");\n  const [nickname, setNickname] = React.useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n\n    db.collection(\"users\").doc(0 + \"\").set({\n      name: name,\n      nickname: nickname\n    }, { merge: true })\n      .then(() => {\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n\n        firebase.auth().currentUser.providerData.forEach(function (profile) {\n          if (profile.displayName != null) {\n            db.collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n              name: profile.displayName,\n              nickname: profile.displayName\n            }, { merge: true })\n              .then(() => {\n              })\n              .catch((error) => {\n                alert(error.message);\n              });\n          }\n          else if (profile.providerId == \"github.com\") {\n            db.collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n              name: firebase.auth().currentUser.uid,\n              nickname: firebase.auth().currentUser.uid\n            }, { merge: true })\n              .then(() => {\n              })\n              .catch((error) => {\n                alert(error.message);\n              });\n          }\n          else {\n            var docRef = db.collection(\"users\").doc(0+\"\");\n\n            docRef.get().then(function (doc) {\n              db.collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n                name: doc.data().name,\n                nickname: doc.data().nickname\n              }, { merge: true })\n                .then(() => {\n                })\n                .catch((error) => {\n                  alert(error.message);\n                });\n\n            }).catch(function (error) {\n              console.log(\"Error getting document:\", error);\n            });\n\n            \n          }\n\n        });\n      }\n\n      setName(\"\");\n      setNickname(\"\");\n    })\n  };\n\n  useEffect(() => { authListener(); }, []);\n\n  const keyHandleLogin = (e) => {\n    if (e.key == 'Enter') {\n      handleLogin();\n    }\n  }\n\n  const keyHandleSignUp = (e) => {\n    if (e.key == 'Enter') {\n      handleSignUp();\n    }\n  }\n\n  // ui config\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  }\n\n  // 렌더링\n\n  return (\n    <div className=\"Login\">\n      <Grid container justify=\"center\" wrap=\"wrap\">\n        <Paper className='Paper'>\n          <label>사용자 이메일</label>\n          <input type=\"text\" autoFocus required value={email} onChange={(e) => setEmail(e.target.value)} />\n          <p className=\"errorMsg\">{emailError}</p>\n          <label>비밀번호</label>\n          <input type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n          <p className=\"errorMsg\">{passwordError}</p>\n          <div className=\"btnContainer\" onKeyPress={keyHandleSignUp}>\n            {hasAccount ? (\n              <>\n                <button onClick={handleLogin} onKeyPress={keyHandleLogin}>로그인</button>\n                <p>계정이 없으면 <Button onClick={() => setHasAccount(!hasAccount)}>회원가입</Button></p>\n              </>\n            ) : (\n                <>\n                  <label>이름</label>\n                  <input type=\"text\" required value={name} onChange={(e) => setName(e.target.value)} />\n                  <label>닉네임</label>\n                  <input type=\"text\" required value={nickname} onChange={(e) => setNickname(e.target.value)} />\n                  <button onClick={handleSignUp}>회원가입</button>\n                  <p>계정이 있으면 <Button onClick={() => setHasAccount(!hasAccount)}>로그인</Button></p>\n                </>\n              )}\n          </div>\n\n          <hr></hr>\n          회원가입\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </Paper>\n      </Grid>\n    </div>\n  );\n}\n\n\nexport default Login;","/home/songjh/Project/PReview/src/Community_view_write.js",[],"/home/songjh/Project/PReview/src/Camp_review_detail.js",["99","100"],"import React, { Component } from 'react';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport './total.css';\r\nimport { db, auth } from './firebase';\r\n\r\nclass Camp_review_detail extends Component {\r\n// Paper 태그 스타일\r\n    styles = ({ spacing: { unit } }) => ({\r\n        paper: {\r\n            margin: `${unit * 3}px auto`,\r\n            padding: unit * 2,\r\n            maxWidth: 400\r\n        }\r\n    })\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: []\r\n        };\r\n    }\r\n\r\n    likeUpdate() {\r\n        let params = this.getUrlParams();\r\n        let edit = this.state.items.like;\r\n        console.log(edit);\r\n\r\n        db.collection(\"postings\").doc(params.id).update({\r\n            'like': edit+1\r\n        }).then(() => {\r\n            window.location.reload(false);\r\n        })\r\n    }\r\n\r\n    getUrlParams() {\r\n        var params = {};\r\n        window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; });\r\n        return params;\r\n    }\r\n\r\n    componentWillMount() {\r\n        let params = this.getUrlParams();\r\n        let review = db.collection(\"postings\").doc(params.id);\r\n\r\n        review.get().then(res => {\r\n            this.setState({items: res.data()});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let item = this.state.items;\r\n\r\n        let params = this.getUrlParams();\r\n        let board = decodeURI(params.board);\r\n\r\n        // 렌더링\r\n        return (\r\n            <div className=\"Camp_review_detail\">\r\n                <div className=\"sidebar\">\r\n                    <aside class=\"sidebar\">\r\n                        <ul class=\"category_camp\">\r\n                            <li><a href=\"/Camp_review_main?board=알고리즘\">알고리즘</a></li>\r\n                            <li><a href=\"/Camp_review_main?board=웹프로그래밍\">웹프로그래밍</a></li>\r\n                            <li><a href=\"/Camp_review_main?board=데이터 분석\">데이터분석</a></li>\r\n                            <li><a href=\"/Camp_review_main?board=AI\">AI</a></li>\r\n                        </ul>\r\n                    </aside>\r\n                </div>\r\n                <article>\r\n                    <Paper classname=\"paper\" elevation={3}>\r\n                        <div id=\"review_header\">\r\n                            <div id=\"review_title\">{item.title}</div>\r\n                            <div id=\"writer_info\">\r\n                                <span id=\"writer\">{item.writer_id}</span>\r\n                                <span id=\"date\">{item.date}</span>\r\n                            </div>\r\n                        </div>\r\n                        <hr id=\"line\" />\r\n                        <div id=\"review_content\">\r\n                            {item.content}\r\n                        </div>\r\n                        <hr id=\"line\" />\r\n\r\n                        <div class=\"comment_header\">\r\n                                <div class=\"comment_title\">댓글</div>\r\n                                <div>\r\n                                    <button class=\"like\" onClick={() => { this.likeUpdate() }}><i class=\"far fa-heart\">♥</i></button>\r\n                                    <span class=\"likepeople\">{item.like}</span>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        <div class=\"comment_content\">\r\n                                <div id=\"comment\">\r\n                                    <form className=\"form\" onSubmit={this.handleSubmitComment}>\r\n                                        <input id=\"input\" type=\"text\" value={this.state.content} onChange={(e) => this.setState({ content: e.target.value, posting_id: item.writer_id })}></input>\r\n                                        <Button variant=\"contained\" type=\"submit\" onClick={this.handleSubmitComment}>댓글 작성</Button>\r\n                                    </form>\r\n                                </div>\r\n                                <div class=\"item\">\r\n                                    <div class=\"comment_nickname\">닉네임 1</div>\r\n                                    <div class=\"comment_content\">와 정말 유익한 후기!</div>\r\n                                    <div class=\"comment_date\">2020/11/7</div>\r\n                                    <div class=\"comment_time\">17:35:55</div>\r\n                                </div>\r\n\r\n                                <div class=\"item\">\r\n                                    <div class=\"comment_nickname\">닉네임 2</div>\r\n                                    <div class=\"comment_content\">저도 들어봐야겠어요!</div>\r\n                                    <div class=\"comment_date\">2020/11/7</div>\r\n                                    <div class=\"comment_time\">17:50:43</div>\r\n                                </div>\r\n                            </div>\r\n                    </Paper>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Camp_review_detail;\r\n","/home/songjh/Project/PReview/src/Mypage.js",[],"/home/songjh/Project/PReview/src/Main.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"/home/songjh/Project/PReview/src/Community_view_detail.js",[],"/home/songjh/Project/PReview/src/Camp_review_main.js",["116","117","118","119"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport './total.css';\r\nimport { db } from './firebase.js';\r\n\r\nclass Camp_review_main extends Component {\r\n    plusHeart(){\r\n\r\n    }\r\n\r\n    printStar(star) {\r\n        let ret = \"\";\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            if (i < star) ret += \"★\";\r\n            else ret += \"☆\";\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    getUrlParams() {\r\n        let params = {};\r\n        params[\"search_exist\"] = false;\r\n\r\n        let exist = false;\r\n        window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; params[key+\"_exist\"] = true;});\r\n\r\n        return params;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        {   \r\n            let params = this.getUrlParams();\r\n            let search;\r\n            if(params.search_exist) {\r\n                search = decodeURI(params.search).toLowerCase();\r\n                console.log(search);\r\n            }\r\n            console.log(params.board);\r\n            let board = decodeURI(params.board);\r\n            console.log(board);\r\n\r\n            db.collection(\"postings\")\r\n                .onSnapshot(snaps => {\r\n                    snaps.forEach(doc => {\r\n                        let title = doc.data().title.toLowerCase();\r\n                        console.log(title);\r\n                        if (params.board == doc.data().board || (params.search_exist && title.indexOf(search) != -1)){\r\n                            const reviewDiv = document.createElement(\"div\");\r\n\r\n                            const htmlContent =\r\n                                \"<div class=\\\"review\\\">\\\r\n                                    <ul>\\\r\n                                        <li class=\\\"item\\\">\\\r\n                                            <a href=\\\"#\\\"><img src=\\\"image.jpg\\\" alt=\\\"\\\" width=\\\"100\\\"></img></a>\\\r\n                                            <div class=\\\"info\\\">\\\r\n                                            <a href='/Camp_review_detail?board=\"+board+\"&id=\"+doc.id+\"'><div class=\\\"title\\\">\"+doc.data().title+\"</div></a>\\\r\n                                            </div>\\\r\n                                            <div class=\\\"like\\\">\\\r\n                                                <span class=\\\"date\\\">\"+doc.data().date+\"</span>\\\r\n                                                <div class=\\\"likebtn\\\">\\\r\n                                                    <i class=\\\"fas fa-heart\\\">♥</i>\\\r\n                                                <div class=\\\"likepeople\\\">\"+doc.data().like+\"</div>\\\r\n                                                </div>\\\r\n                                            <span class=\\\"writer\\\">작성자 : \"+doc.data().writer_id+\"</span>\\\r\n                                            </div>\\\r\n                                        </li>\\\r\n                                    </ul>\\\r\n                                </div>\";\r\n\r\n                            reviewDiv.innerHTML = htmlContent;\r\n                            if(this.myRef!=null)\r\n                        {\r\n                            this.myRef.appendChild(reviewDiv);\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    // 렌더링\r\n    render() {\r\n        let params = this.getUrlParams();\r\n        let board = params.search_exist ? \"강의 리뷰\" : decodeURI(params.board)\r\n        return (\r\n            <div className=\"Lecture_review_main\">\r\n            <div className=\"sidebar\">\r\n                <aside class=\"sidebar\" style={{width:\"25%\"}}>\r\n                    <ul class=\"category_camp\">\r\n                        <li><a href=\"/Camp_review_main?board=알고리즘\">알고리즘</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=웹프로그래밍\">웹프로그래밍</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=데이터 분석\">데이터분석</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=AI\">AI</a></li>\r\n                    </ul>\r\n                    <div class='schedule'>\r\n                        <article class=\"mainarticle\">\r\n                            <p class='small_title_cal'>12월의 일정</p>\r\n                            <table class=\"tg\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"sunday\">일</th>\r\n                                        <th class=\"weekday\">월</th>\r\n                                        <th class=\"weekday\">화</th>\r\n                                        <th class=\"weekday\">수</th>\r\n                                        <th class=\"weekday\">목</th>\r\n                                        <th class=\"weekday\">금</th>\r\n                                        <th class=\"saturday\">토</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"day\" style={{ color: \"green\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"purple\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"purple\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"orange\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"green\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"orange\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\">●</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"purple\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"green\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </article>\r\n                    </div>\r\n                    <br></br>\r\n                    <div class='schedule2'>\r\n                        <h4 style={{ color: \"green\", display: \"inline-block\" }}>●</h4>&nbsp;\r\n                        <h4 style={{ color: \"#585858\", display: \"inline-block\" }}> 대회 </h4>&nbsp;\r\n                        <h4 style={{ color: \"#purple\", display: \"inline-block\" }}>● </h4>&nbsp;\r\n                        <h4 style={{ color: \"#585858\", display: \"inline-block\" }}> 캠프 </h4>&nbsp;\r\n                        <h4 style={{ color: \"#orange\", display: \"inline-block\" }}>● </h4>&nbsp;\r\n                        <h4 style={{ color: \"#585858\", display: \"inline-block\" }}> 채용 </h4>&nbsp;\r\n                    </div>\r\n                    <br></br>\r\n                    <div class='schedule3'>\r\n                        <p> ◦ 1일 2020 E-PEER</p>\r\n                        <p> ◦ 5일 Google 코딩 부트 캠프</p>\r\n                        <p> ◦ 11일 2020 하반기 삼성전자 공채</p>\r\n                        <p> ◦ 13일 Google CodeJam</p>\r\n                        <p> ◦ 19일 Sk c&c 딥러닝 R&D</p>\r\n                    </div>\r\n                </aside>\r\n            </div>\r\n\r\n                <article class=\"article\">\r\n                <Paper classname=\"paper\" elevation={2}>\r\n                    <div class=\"review_search\">\r\n                        <div class=\"category_name\">\r\n                            <span>{board}</span>\r\n                        </div>\r\n                        <div>\r\n                            <form class=\"search\">\r\n                                <input class=\"keyword\" type=\"text\" name=\"search\" size=\"80\"></input>\r\n                            </form>\r\n                        </div>\r\n                        <Link to={'/Camp_review_write?board='+board}><Button id='write_btn' variant=\"outlined\" type=\"submit\">글작성</Button></Link>\r\n                    </div>\r\n\r\n                    <div class=\"header\">\r\n                        <span>링크</span>\r\n                        <span>내용</span>\r\n                        <div class=\"btn\">\r\n                            <button>작성날짜△</button>\r\n                            <button>조회수△</button>\r\n                            <button>좋아요</button>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"posting\" ref={(DOMNodeRef) => {\r\n                 this.myRef=DOMNodeRef;\r\n                }}>\r\n                    </div>\r\n                    </Paper>\r\n                </article>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Camp_review_main;\r\n","/home/songjh/Project/PReview/src/Community_view_main.js",["120"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport './total.css';\r\nimport { db } from './firebase.js';\r\n\r\nclass Community_view_free extends Component {\r\n    // 렌더링 후 완료\r\n    componentDidMount = () => {\r\n        {\r\n            db.collection(\"free\")\r\n            .onSnapshot(snaps => {\r\n                document.getElementById(\"free\").innerHTML = '';\r\n                snaps.forEach(doc => {\r\n                    const reviewDiv = document.createElement(\"div\");\r\n\r\n                    const htmlContent =\r\n                        \"<div class=\\\"review\\\">\\\r\n                                            <ul>\\\r\n                                        <li class=\\\"item\\\">\\\r\n                                            <a href=\\\"#\\\"><img src=\\\"image.jpg\\\" alt=\\\"\\\" width=\\\"100\\\"></img></a>\\\r\n                                            <div class=\\\"info\\\">\\\r\n                                            <Link to='/Lecture_review_detail'><div class=\\\"title\\\">\"+ doc.data().lecture_id + \"</div></Link>\\\r\n                                                <div class=\\\"rank\\\">\"+ this.printStar(doc.data().star) + \"</div>\\\r\n                                                <div class=\\\"tag\\\">\"+ doc.data().tags + \"</div>\\\r\n                                                <Button variant=\\\"outlined\\\" color=\\\"primary\\\" type=\\\"submit\\\">이 강의만 모아보기</Button>\\\r\n                                            </div>\\\r\n                                            <div class=\\\"like\\\">\\\r\n                                                <span class=\\\"date\\\">\"+ doc.data().date + \"</span>\\\r\n                                                <div class=\\\"likebtn\\\">\\\r\n                                                    <button id=\\\"fas fa-heartBtn\\\" onClick={plusHeart}>\\\r\n                                                        <i class=\\\"fas fa-heart\\\">♥</i>\\\r\n                                                    </button>\\\r\n                                                <div class=\\\"likepeople\\\">\"+ doc.data().like + \"</div>\\\r\n                                                </div>\\\r\n                                            <span class=\\\"writer\\\">작성자 : \"+ doc.data().writer_id + \"</span>\\\r\n                                            </div>\\\r\n                                        </li>\\\r\n                                    </ul>\\\r\n                                </div>\";\r\n\r\n                    console.log(htmlContent);\r\n\r\n                    reviewDiv.innerHTML = htmlContent;\r\n\r\n                    document.getElementById(\"reviews\").appendChild(reviewDiv);\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    plusHeart() {\r\n\r\n    }\r\n\r\n    // 렌더링\r\n    render() {\r\n        return (\r\n            <div className=\"Lecture_review_main\">\r\n                <div className=\"sidebar\">\r\n                    <aside class=\"sidebar\">\r\n                        <Link to='/Community_view_main'><p>자유게시판</p></Link>\r\n                        <br></br>\r\n                        <Link to='/Community_view_main'><p>질문게시판</p></Link>\r\n                        <br></br>\r\n                        <Link to='/Community_view_main'><p>강의 수강원 모집</p></Link>\r\n                        <br></br>\r\n                        <Link to='/Community_view_main'><p>프로젝트 참가자 모집</p></Link>\r\n                    </aside>\r\n                </div>\r\n                <article class=\"article\">\r\n                    <Paper classname=\"paper\" elevation={2}>\r\n                        <div class=\"review_search\">\r\n                            <div class=\"category_name\">\r\n                                <span>Full Stack</span>\r\n                            </div>\r\n                            <div>\r\n                                <form class=\"search\">\r\n                                    <button>\r\n                                        <i class=\"fas fa-search\"></i>\r\n                                    </button>\r\n                                    <input class=\"keyword\" type=\"text\" name=\"search\" size=\"80\"></input>\r\n                                </form>\r\n                            </div>\r\n                            <Link to='/lecture_review_write'><Button variant=\"contained\" type=\"submit\">글 작성</Button></Link>\r\n                        </div>\r\n                        <div id=\"main-middle\">\r\n                            <span id=\"no\">No.</span>\r\n                            <span id=\"title\">제목</span>\r\n                            <span id=\"writer\">작성자</span>\r\n                            <span id=\"date\"><input type=\"button\" id=\"sort-by-date\" value=\"작성날짜▲\"></input></span>\r\n                            <span id=\"view-like\">\r\n                                <input type=\"button\" id=\"sort-by-view\" value=\"조회수\"></input>\r\n                                <input type=\"button\" id=\"sort-by-like\" value=\"좋아요\"></input>\r\n                            </span>\r\n                            <hr></hr>\r\n                        </div>\r\n                        <div id=\"free\">\r\n                             \r\n                        </div>\r\n                    </Paper>\r\n                </article>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Community_view_free;\r\n","/home/songjh/Project/PReview/src/Solution_main.js",[],"/home/songjh/Project/PReview/src/Lecture_review_main.js",["121","122","123","124","125","126","127"],"/home/songjh/Project/PReview/src/Lecture_review_detail.js",["128","129","130","131","132","133","134"],"/home/songjh/Project/PReview/src/Lecture_review_write.js",["135","136","137","138","139","140","141","142"],"import React, { useState } from 'react';\r\nimport './total.css';\r\nimport { Snackbar, NoSsr, Select, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport styled from 'styled-components';\r\nimport { db } from './firebase.js';\r\nimport firebase from 'firebase';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SentimentSatisfied } from '@material-ui/icons';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n// Paper 태그 스타일\r\nconst styles = ({ spacing: { unit } }) => ({\r\n    paper: {\r\n        margin: `${unit * 3}px auto`,\r\n        padding: unit * 2,\r\n        maxWidth: 400\r\n    }\r\n})\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst InputWrapper = styled('div')`\r\n&:hover {\r\n    border-color: #40a9ff;\r\n  }\r\n\r\n  &.focused {\r\n    border-color: #40a9ff;\r\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\r\n  }\r\n\r\n  & input {\r\n    font-size: 14px;\r\n    height: 30px;\r\n    box-sizing: border-box;\r\n    padding: 4px 6px;\r\n    width: 0;\r\n    min-width: 30px;\r\n    flex-grow: 1;\r\n    border: 0;\r\n    margin: 0;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst Tag = styled(({ label, onDelete, ...props }) => (\r\n    <div {...props}>\r\n        <span>{label}</span>\r\n        <CloseIcon id='x' onClick={onDelete} />\r\n    </div>\r\n))`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 24px;\r\n  margin: 2px;\r\n  line-height: 22px;\r\n  background-color: #fafafa;\r\n  border: 1px solid #e8e8e8;\r\n  border-radius: 2px;\r\n  box-sizing: content-box;\r\n  padding: 0 4px 0 10px;\r\n  outline: 0;\r\n  overflow: hidden;\r\n\r\n  #x {\r\n      font-size:25px;\r\n  }\r\n\r\n  &:focus {\r\n    border-color: #40a9ff;\r\n    background-color: #e6f7ff;\r\n  }\r\n\r\n  & span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  & svg {\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n  }\r\n`;\r\n\r\nconst Listbox = styled('ul')`\r\n  width: 300px;\r\n  margin: 2px 0 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  list-style: none;\r\n  background-color: #fff;\r\n  overflow: auto;\r\n  max-height: 250px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  z-index: 1;\r\n\r\n  & li {\r\n    padding: 5px 12px;\r\n    display: flex;\r\n\r\n    & span {\r\n      flex-grow: 1;\r\n    }\r\n\r\n    & svg {\r\n      color: transparent;\r\n    }\r\n  }\r\n\r\n  & li[aria-selected='true'] {\r\n    background-color: #fafafa;\r\n    font-weight: 600;\r\n\r\n    & svg {\r\n      color: #1890ff;\r\n    }\r\n  }\r\n\r\n  & li[data-focus='true'] {\r\n    background-color: #e6f7ff;\r\n    cursor: pointer;\r\n\r\n    & svg {\r\n      color: #000;\r\n    }\r\n  }\r\n`;\r\n\r\n// 오늘 날짜\r\nconst today = new Date();\r\n\r\n// 게시글 작성\r\nconst Lecture_review_write = () => {\r\n    // 알림창\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // 빈칸 방지\r\n    const classes = useStyles();\r\n    const [openBar, setOpenBar] = React.useState(false);\r\n\r\n    const handleClickBar = () => {\r\n        setOpenBar(true);\r\n    };\r\n\r\n    const handleCloseBar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenBar(false);\r\n    };\r\n\r\n    let params = {};\r\n    window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; });\r\n\r\n    // 데이터 변수\r\n    const [writer_id, setWriterId] = useState(\"\");\r\n    const [lecture_name, setLectureName] = useState(\"\");\r\n    const [star, setStar] = useState(\"\");\r\n    const [tags, setTags] = useState(\"\");\r\n    const [level, setLevel] = useState(\"\");\r\n    const [period, setPeriod] = useState(\"\");\r\n    const [cost, setCost] = useState(\"\");\r\n    const [pros, setPros] = useState(\"\");\r\n    const [cons, setCons] = useState(\"\");\r\n    const [link, setLink] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [like, setLike] = useState(\"\");\r\n    const [board, setBoard] = useState(params.board);\r\n\r\n    // 데이터 저장\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleClose();\r\n\r\n        // 빈칸 방지\r\n        if ((lecture_name == \"\") || (star == null) || (tags == null) || (period == null) || (cost == null) || (level == null) || (pros == null) || (cons == null) || (link == null) || (date == null)) {\r\n            handleClickBar();\r\n        }\r\n        else {\r\n            db.collection(\"reviews\").add({\r\n                writer_id: firebase.auth().currentUser.uid,\r\n                lecture_name: lecture_name,\r\n                star: star,\r\n                tags: tags,\r\n                period: period,\r\n                cost: cost,\r\n                level: level,\r\n                pros: pros,\r\n                cons: cons,\r\n                link: link,\r\n                date: today.toLocaleString(),\r\n                like: 0,\r\n                board: board\r\n            })\r\n                .then((docRef) => {\r\n                    window.location.href = \"/Lecture_review_detail?board=\"+params.board+\"&id=\"+docRef.id;\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n\r\n            setWriterId(\"\");\r\n            setLectureName(\"\");\r\n            setStar(\"\");\r\n            setTags(\"\");\r\n            setPeriod(\"\");\r\n            setCost(\"\");\r\n            setLevel(\"\");\r\n            setPros(\"\");\r\n            setCons(\"\");\r\n            setPeriod(\"\");\r\n            setCost(\"\");\r\n            setLevel(\"\");\r\n            setLink(\"\");\r\n            setDate(\"\");\r\n            setLike(\"\");\r\n            setBoard(\"\");\r\n        }\r\n    };\r\n\r\n    // 태그 관련 변수\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        getTagProps,\r\n        getListboxProps,\r\n        getOptionProps,\r\n        groupedOptions,\r\n        value,\r\n        focused,\r\n        setAnchorEl,\r\n    } = useAutocomplete({\r\n        id: 'customized-hook-demo',\r\n        multiple: true,\r\n        options: tagContent,\r\n        getOptionLabel: (option) => option.title,\r\n    });\r\n\r\n    // 태그 기능\r\n    const handleTag = (e) => {\r\n        setTags(state => ({ tags: [...state.tags, e.target.value] }));\r\n    }\r\n\r\n    // 엔터키\r\n    const keyHandleClickOpen = (e) => {\r\n        if (e.key == 'Enter') {\r\n            handleClickOpen();\r\n        }\r\n    }\r\n\r\n    // 렌더링\r\n    return (\r\n        <div className=\"Lecture_review_write\">\r\n            <div className={classes.root}>\r\n                <Snackbar open={openBar} autoHideDuration={6000} onClose={handleCloseBar}>\r\n                    <Alert onClose={handleCloseBar} severity=\"error\">\r\n                        빈칸 없이 입력해주세요\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n            <div className=\"sidebarclass\">\r\n                <aside class=\"sidebar\">\r\n                    <p style={{fontWeight:\"bold\" , color:\"#585858\"}}>언어</p>\r\n                    <ul class=\"category\">\r\n                        <li><a href=\"/Lecture_review_main?board=C/C++\">C / C++</a></li>\r\n                        <li><a href=\"/Lecture_review_main?board=C#\">C#</a></li>\r\n                        <li><a href=\"/Lecture_review_main?board=Java\">Java</a></li>\r\n                        <li><a href=\"/Lecture_review_main?board=Python\">Python</a></li>\r\n                        <li><a href=\"/Lecture_review_main?board=Javascript\">Javascript</a></li>\r\n                    </ul>\r\n                    <p>분야</p>\r\n                    <ul class=\"category\">\r\n                        <li><a href=\"/Lecture_review_main?board=Algorithm\">Algorithm</a></li>\r\n                        <li><a href=\"/Lecture_review_main?board=FrontEnd\">FrontEnd</a></li>\r\n                        <li><a href=\"/Lecture_review_main?board=Server\">Server</a></li>\r\n                        <li><a href=\"/Lecture_review_main?board=Database\">Database</a></li>\r\n                        <li><a href=\"/Lecture_review_main?board=ML/DL\">ML/DL</a></li>\r\n                    </ul>\r\n                </aside>\r\n            </div>\r\n            <article class=\"article\">\r\n                <Paper classname=\"paper\" elevation={3}>\r\n                <div class=\"category_name\">\r\n                    <span style={{fontSize:\"16px\"}}>{decodeURI(params.board)}</span>\r\n                </div>\r\n                    <form className=\"form\" onSubmit={handleSubmit}>\r\n                        <section id=\"lecture-name\" class=\"writing-block\">\r\n                            <div class=\"item\">\r\n                                <div class=\"review-entry\">\r\n                                    <span>강좌 이름 :</span>\r\n                                </div>\r\n                                <div class=\"review-content\">\r\n                                    <input type=\"text\" id=\"name\" class=\"short-text\" list=\"lecture-list\" value={lecture_name} onChange={(e) => setLectureName(e.target.value)}></input>\r\n                                    <datalist id=\"lecture-list\">\r\n                                        <option value=\"유튜브 클론코딩\"></option>\r\n                                        <option value=\"Amazing, awesome, incredible!\"></option>\r\n                                    </datalist>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section id=\"contants\" class=\"writing-block\">\r\n                            <div id=\"star\" class=\"item\">\r\n                                <div class=\"review-entry\">\r\n                                    <span class=\"entry-name\">별점</span>\r\n                                </div>\r\n                                <div class=\"review-content\">\r\n                                    <Select id=\"star-score\" value={star} onChange={(e) => setStar(e.target.value)}>\r\n                                        <option value=\"5\">★★★★★</option>\r\n                                        <option value=\"4\">★★★★☆</option>\r\n                                        <option value=\"3\">★★★☆☆</option>\r\n                                        <option value=\"2\">★★☆☆☆</option>\r\n                                        <option value=\"1\">★☆☆☆☆</option>\r\n                                    </Select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div id=\"hashtags\" class=\"item\">\r\n                                <div class=\"review-entry\">\r\n                                    <span class=\"entry-name\">태그</span>\r\n                                </div>\r\n                                <div class=\"review-content\">\r\n                                    <ul class=\"tags\">\r\n                                        <NoSsr>\r\n                                            <div>\r\n                                                <div {...getRootProps()}>\r\n                                                    <InputWrapper id=\"tagstyle\" ref={setAnchorEl} className={focused ? 'focused' : ''} value={tags} onChange={(e) => setTags(e.target.value)}>\r\n                                                        {value.map((option, index) => (\r\n                                                            <Tag label={option.title} {...getTagProps({ index })} value={tags} onChange={handleTag} />\r\n                                                        ))}\r\n\r\n                                                        <input {...getInputProps()} />\r\n                                                    </InputWrapper>\r\n                                                </div>\r\n                                                {groupedOptions.length > 0 ? (\r\n                                                    <Listbox {...getListboxProps()}>\r\n                                                        {groupedOptions.map((option, index) => (\r\n                                                            <li {...getOptionProps({ option, index })}>\r\n                                                                <span>{option.title}</span>\r\n                                                                <CheckIcon fontSize=\"small\" />\r\n                                                            </li>\r\n                                                        ))}\r\n                                                    </Listbox>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </NoSsr>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div id=\"lecture-info\" class=\"item\">\r\n                                <div class=\"review-entry\">\r\n                                    <span class=\"entry-name\">수강 정보</span>\r\n                                </div>\r\n                                <div class=\"review-content\">\r\n                                    <span>수강 기간 : </span>\r\n                                    <input type=\"text\" id=\"period\" value={period} onChange={(e) => setPeriod(e.target.value)}></input>\r\n                                    <span> / 수강 비용 : </span>\r\n                                    <input type=\"text\" id=\"cost\" value={cost} onChange={(e) => setCost(e.target.value)}></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div id=\"pros\" class=\"item\">\r\n                                <div class=\"review-entry\">\r\n                                    <span class=\"entry-name\">장점</span>\r\n                                </div>\r\n                                <div class=\"review-content\">\r\n                                    <input type=\"text\" id=\"pros\" class=\"long-text\" value={pros} onChange={(e) => setPros(e.target.value)}></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div id=\"cons\" class=\"item\">\r\n                                <div class=\"review-entry\">\r\n                                    <span class=\"entry-name\">단점</span>\r\n                                </div>\r\n                                <div class=\"review-content\">\r\n                                    <input type=\"text\" id=\"cons\" class=\"long-text\" value={cons} onChange={(e) => setCons(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div id=\"link\" class=\"item\">\r\n                                <div class=\"review-entry\">\r\n                                    <span class=\"entry-name\">강의 링크</span>\r\n                                </div>\r\n                                <div class=\"review-content\">\r\n                                    <input type=\"text\" id=\"link\" class=\"short-text\" value={link} onChange={(e) => setLink(e.target.value)}></input>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section id=\"submit-button\">\r\n                            <Button variant=\"contained\" onClick={handleClickOpen} onKeyPress={keyHandleClickOpen}>글 작성</Button>\r\n                            <Dialog\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                            >\r\n                                <DialogTitle id=\"alert-dialog-title\">{\"리뷰 작성\"}</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText id=\"alert-dialog-description\">\r\n                                        리뷰를 저장하시겠습니까?\r\n                                        </DialogContentText>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose} color=\"primary\">취소</Button>\r\n                                    <Button type=\"submit\" onClick={handleSubmit} color=\"primary\" autoFocus>확인</Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </section>\r\n                    </form>\r\n                </Paper>\r\n            </article>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// 태그 종류\r\nconst tagContent = [\r\n    { title: '#쉬워요 ' },\r\n    { title: '#적당해요 ' },\r\n    { title: '#어려워요 ' },\r\n    { title: '#효과적이에요 ' },\r\n    { title: '#전체구조를보여줘요 ' },\r\n    { title: '#실무적이에요' }\r\n];\r\n\r\nexport default Lecture_review_write;\r\n","/home/songjh/Project/PReview/src/Camp_review_write.js",["143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useState } from 'react';\r\nimport './total.css';\r\nimport { Snackbar, NoSsr, Select, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport styled from 'styled-components';\r\nimport { db } from './firebase.js';\r\nimport firebase from 'firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n// Paper 태그 스타일\r\nconst styles = ({ spacing: { unit } }) => ({\r\n    paper: {\r\n        margin: `${unit * 3}px auto`,\r\n        padding: unit * 2,\r\n        maxWidth: 400\r\n    }\r\n})\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst InputWrapper = styled('div')`\r\n&:hover {\r\n    border-color: #40a9ff;\r\n  }\r\n\r\n  &.focused {\r\n    border-color: #40a9ff;\r\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\r\n  }\r\n\r\n  & input {\r\n    font-size: 14px;\r\n    height: 30px;\r\n    box-sizing: border-box;\r\n    padding: 4px 6px;\r\n    width: 0;\r\n    min-width: 30px;\r\n    flex-grow: 1;\r\n    border: 0;\r\n    margin: 0;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst Tag = styled(({ label, onDelete, ...props }) => (\r\n    <div {...props}>\r\n        <span>{label}</span>\r\n        <CloseIcon id='x' onClick={onDelete} />\r\n    </div>\r\n))`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 24px;\r\n  margin: 2px;\r\n  line-height: 22px;\r\n  background-color: #fafafa;\r\n  border: 1px solid #e8e8e8;\r\n  border-radius: 2px;\r\n  box-sizing: content-box;\r\n  padding: 0 4px 0 10px;\r\n  outline: 0;\r\n  overflow: hidden;\r\n\r\n  #x {\r\n      font-size:25px;\r\n  }\r\n\r\n  &:focus {\r\n    border-color: #40a9ff;\r\n    background-color: #e6f7ff;\r\n  }\r\n\r\n  & span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  & svg {\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n  }\r\n`;\r\n\r\nconst Listbox = styled('ul')`\r\n  width: 300px;\r\n  margin: 2px 0 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  list-style: none;\r\n  background-color: #fff;\r\n  overflow: auto;\r\n  max-height: 250px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  z-index: 1;\r\n\r\n  & li {\r\n    padding: 5px 12px;\r\n    display: flex;\r\n\r\n    & span {\r\n      flex-grow: 1;\r\n    }\r\n\r\n    & svg {\r\n      color: transparent;\r\n    }\r\n  }\r\n\r\n  & li[aria-selected='true'] {\r\n    background-color: #fafafa;\r\n    font-weight: 600;\r\n\r\n    & svg {\r\n      color: #1890ff;\r\n    }\r\n  }\r\n\r\n  & li[data-focus='true'] {\r\n    background-color: #e6f7ff;\r\n    cursor: pointer;\r\n\r\n    & svg {\r\n      color: #000;\r\n    }\r\n  }\r\n`;\r\n\r\n// 오늘 날짜\r\nconst today = new Date();\r\n\r\n// 게시글 작성\r\nconst Camp_review_write = () => {\r\n    // 알림창\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // 빈칸 방지\r\n    const classes = useStyles();\r\n    const [openBar, setOpenBar] = React.useState(false);\r\n\r\n    const handleClickBar = () => {\r\n        setOpenBar(true);\r\n    };\r\n\r\n    const handleCloseBar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenBar(false);\r\n    };\r\n\r\n    let params = {};\r\n    window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; });\r\n\r\n    // 데이터 변수\r\n    const [writer_id, setWriterId] = useState(\"\");\r\n    const [board, setBoard] = useState(params.board);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    // 데이터 저장\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleClose();\r\n\r\n        // 빈칸 방지\r\n        if ((title == \"\" || content == \"\")){\r\n            handleClickBar();\r\n        }\r\n        else {\r\n            db.collection(\"postings\").add({\r\n                writer_id: firebase.auth().currentUser.uid,\r\n                board : board,\r\n                title: title,\r\n                content: content,\r\n                date: today.toLocaleString(),\r\n                like: 0,\r\n                visit: 0,\r\n            })\r\n                .then((docRef) => {\r\n                    window.location.href = \"/Camp_review_detail?board=\"+params.board+\"&id=\"+docRef.id;\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n\r\n            setWriterId(\"\");\r\n            setBoard(\"\");\r\n            setTitle(\"\");\r\n            setContent(\"\"); \r\n        }\r\n    };\r\n\r\n    // 엔터키\r\n    const keyHandleClickOpen = (e) => {\r\n        if (e.key == 'Enter') {\r\n            handleClickOpen();\r\n        }\r\n    }\r\n\r\n    // 렌더링\r\n    return (\r\n        <div className=\"Camp_review_write\">\r\n            <div className={classes.root}>\r\n                <Snackbar open={openBar} autoHideDuration={6000} onClose={handleCloseBar}>\r\n                    <Alert onClose={handleCloseBar} severity=\"error\">\r\n                        빈칸 없이 입력해주세요\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n            <div className=\"sidebarclass\">\r\n            <aside class=\"sidebar\" >\r\n                <ul class=\"category_camp\">\r\n                        <li><a href=\"/Camp_review_main?board=알고리즘\">알고리즘</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=웹프로그래밍\">웹프로그래밍</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=데이터 분석\">데이터분석</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=AI\">AI</a></li>\r\n                    </ul>\r\n              </aside>\r\n            </div>\r\n            <article class=\"article\">\r\n                <Paper classname=\"paper\" elevation={3}>\r\n                <div class=\"category_name\">\r\n                    <span style={{fontSize:\"16px\"}}>{decodeURI(params.board)}</span>\r\n                </div>\r\n                    <form className=\"form\" onSubmit={handleSubmit}>\r\n                        <section id=\"lecture-name\" class=\"writing-block\">\r\n                            <div id='review'>\r\n                                <div id=\"review_header\">\r\n                                    <span id=\"title\">제목 : </span>\r\n                                    <input id=\"title_input\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                                </div>\r\n                                <hr id=\"line\"/>\r\n                                <div id=\"write_box\">\r\n                                    <input id=\"input\" type=\"text\" value={content} onChange={(e) => setContent(e.target.value)}/>\r\n                                </div>\r\n                                <hr id=\"line\"/>\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section id=\"submit-button\">\r\n                            <Button variant=\"contained\" onClick={handleClickOpen} onKeyPress={keyHandleClickOpen}>글 작성</Button>\r\n                            <Dialog\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                            >\r\n                                <DialogTitle id=\"alert-dialog-title\">{\"리뷰 작성\"}</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText id=\"alert-dialog-description\">\r\n                                        리뷰를 저장하시겠습니까?\r\n                                        </DialogContentText>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose} color=\"primary\">취소</Button>\r\n                                    <Link to='/Camp_review_detail'><Button type=\"submit\" onClick={handleSubmit} color=\"primary\" autoFocus>확인</Button></Link>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </section>\r\n                    </form>\r\n                </Paper>\r\n            </article>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n// 태그 종류\r\nconst tagContent = [\r\n    { title: '#쉬워요 ' },\r\n    { title: '#적당해요 ' },\r\n    { title: '#어려워요 ' },\r\n    { title: '#효과적이에요 ' },\r\n    { title: '#전체구조를보여줘요 ' },\r\n    { title: '#실무적이에요' }\r\n];\r\n\r\nexport default Camp_review_write;\r\n","/home/songjh/Project/PReview/src/firebase.js",[],"/home/songjh/Project/PReview/src/canvasjs.react.js",["156"],"﻿/*\r\nCanvasJS React Charts - https://canvasjs.com/\r\nCopyright 2020 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;","/home/songjh/Project/PReview/src/canvasjs.min.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":6,"column":10,"nodeType":"163","messageId":"164","endLine":6,"endColumn":14},{"ruleId":"161","severity":1,"message":"165","line":6,"column":16,"nodeType":"163","messageId":"164","endLine":6,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":52,"column":13,"nodeType":"168","messageId":"169","endLine":52,"endColumn":111},{"ruleId":"170","severity":1,"message":"171","line":64,"column":46,"nodeType":"172","endLine":64,"endColumn":82},{"ruleId":"161","severity":1,"message":"173","line":8,"column":10,"nodeType":"163","messageId":"164","endLine":8,"endColumn":14},{"ruleId":"161","severity":1,"message":"174","line":17,"column":9,"nodeType":"163","messageId":"164","endLine":17,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":31,"column":9,"nodeType":"177","messageId":"178","endLine":40,"endColumn":10},{"ruleId":"175","severity":1,"message":"176","line":48,"column":9,"nodeType":"177","messageId":"178","endLine":56,"endColumn":10},{"ruleId":"179","severity":1,"message":"180","line":87,"column":39,"nodeType":"181","messageId":"182","endLine":87,"endColumn":41},{"ruleId":"179","severity":1,"message":"180","line":130,"column":15,"nodeType":"181","messageId":"182","endLine":130,"endColumn":17},{"ruleId":"179","severity":1,"message":"180","line":136,"column":15,"nodeType":"181","messageId":"182","endLine":136,"endColumn":17},{"ruleId":"161","severity":1,"message":"183","line":4,"column":14,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"184","line":55,"column":13,"nodeType":"163","messageId":"164","endLine":55,"endColumn":18},{"ruleId":"170","severity":1,"message":"185","line":108,"column":83,"nodeType":"172","endLine":108,"endColumn":94},{"ruleId":"170","severity":1,"message":"185","line":109,"column":52,"nodeType":"172","endLine":109,"endColumn":63},{"ruleId":"170","severity":1,"message":"185","line":110,"column":52,"nodeType":"172","endLine":110,"endColumn":63},{"ruleId":"170","severity":1,"message":"185","line":111,"column":52,"nodeType":"172","endLine":111,"endColumn":63},{"ruleId":"170","severity":1,"message":"185","line":118,"column":58,"nodeType":"172","endLine":118,"endColumn":69},{"ruleId":"170","severity":1,"message":"185","line":119,"column":58,"nodeType":"172","endLine":119,"endColumn":69},{"ruleId":"170","severity":1,"message":"185","line":120,"column":58,"nodeType":"172","endLine":120,"endColumn":69},{"ruleId":"170","severity":1,"message":"185","line":121,"column":58,"nodeType":"172","endLine":121,"endColumn":69},{"ruleId":"170","severity":1,"message":"185","line":122,"column":58,"nodeType":"172","endLine":122,"endColumn":69},{"ruleId":"186","severity":1,"message":"187","line":177,"column":33,"nodeType":"172","endLine":177,"endColumn":44},{"ruleId":"170","severity":1,"message":"185","line":177,"column":33,"nodeType":"172","endLine":177,"endColumn":44},{"ruleId":"186","severity":1,"message":"187","line":179,"column":33,"nodeType":"172","endLine":179,"endColumn":44},{"ruleId":"170","severity":1,"message":"185","line":179,"column":33,"nodeType":"172","endLine":179,"endColumn":44},{"ruleId":"186","severity":1,"message":"187","line":181,"column":33,"nodeType":"172","endLine":181,"endColumn":44},{"ruleId":"170","severity":1,"message":"185","line":181,"column":33,"nodeType":"172","endLine":181,"endColumn":44},{"ruleId":"161","severity":1,"message":"188","line":27,"column":13,"nodeType":"163","messageId":"164","endLine":27,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":34,"column":9,"nodeType":"168","messageId":"169","endLine":81,"endColumn":10},{"ruleId":"179","severity":1,"message":"180","line":50,"column":42,"nodeType":"181","messageId":"182","endLine":50,"endColumn":44},{"ruleId":"179","severity":1,"message":"189","line":50,"column":111,"nodeType":"181","messageId":"182","endLine":50,"endColumn":113},{"ruleId":"166","severity":1,"message":"167","line":10,"column":9,"nodeType":"168","messageId":"169","endLine":49,"endColumn":10},{"ruleId":"161","severity":1,"message":"190","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"191","line":6,"column":10,"nodeType":"163","messageId":"164","endLine":6,"endColumn":26},{"ruleId":"161","severity":1,"message":"192","line":8,"column":5,"nodeType":"163","messageId":"164","endLine":8,"endColumn":13},{"ruleId":"161","severity":1,"message":"188","line":21,"column":13,"nodeType":"163","messageId":"164","endLine":21,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":29,"column":9,"nodeType":"168","messageId":"169","endLine":79,"endColumn":10},{"ruleId":"179","severity":1,"message":"180","line":45,"column":38,"nodeType":"181","messageId":"182","endLine":45,"endColumn":40},{"ruleId":"179","severity":1,"message":"189","line":45,"column":110,"nodeType":"181","messageId":"182","endLine":45,"endColumn":112},{"ruleId":"161","severity":1,"message":"183","line":4,"column":14,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"193","line":6,"column":10,"nodeType":"163","messageId":"164","endLine":6,"endColumn":39},{"ruleId":"166","severity":1,"message":"167","line":76,"column":9,"nodeType":"168","messageId":"169","endLine":113,"endColumn":10},{"ruleId":"166","severity":1,"message":"167","line":78,"column":17,"nodeType":"168","messageId":"169","endLine":87,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":81,"column":52,"nodeType":"181","messageId":"182","endLine":81,"endColumn":54},{"ruleId":"179","severity":1,"message":"180","line":94,"column":37,"nodeType":"181","messageId":"182","endLine":94,"endColumn":39},{"ruleId":"166","severity":1,"message":"167","line":157,"column":9,"nodeType":"168","messageId":"169","endLine":166,"endColumn":10},{"ruleId":"161","severity":1,"message":"194","line":11,"column":10,"nodeType":"163","messageId":"164","endLine":11,"endColumn":14},{"ruleId":"161","severity":1,"message":"195","line":11,"column":16,"nodeType":"163","messageId":"164","endLine":11,"endColumn":24},{"ruleId":"161","severity":1,"message":"196","line":13,"column":10,"nodeType":"163","messageId":"164","endLine":13,"endColumn":28},{"ruleId":"161","severity":1,"message":"197","line":20,"column":7,"nodeType":"163","messageId":"164","endLine":20,"endColumn":13},{"ruleId":"161","severity":1,"message":"198","line":182,"column":12,"nodeType":"163","messageId":"164","endLine":182,"endColumn":21},{"ruleId":"161","severity":1,"message":"199","line":193,"column":12,"nodeType":"163","messageId":"164","endLine":193,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":202,"column":27,"nodeType":"181","messageId":"182","endLine":202,"endColumn":29},{"ruleId":"179","severity":1,"message":"180","line":273,"column":19,"nodeType":"181","messageId":"182","endLine":273,"endColumn":21},{"ruleId":"161","severity":1,"message":"200","line":3,"column":20,"nodeType":"163","messageId":"164","endLine":3,"endColumn":25},{"ruleId":"161","severity":1,"message":"201","line":3,"column":27,"nodeType":"163","messageId":"164","endLine":3,"endColumn":33},{"ruleId":"161","severity":1,"message":"202","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":23},{"ruleId":"161","severity":1,"message":"203","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":17},{"ruleId":"161","severity":1,"message":"197","line":19,"column":7,"nodeType":"163","messageId":"164","endLine":19,"endColumn":13},{"ruleId":"161","severity":1,"message":"204","line":35,"column":7,"nodeType":"163","messageId":"164","endLine":35,"endColumn":19},{"ruleId":"161","severity":1,"message":"205","line":59,"column":7,"nodeType":"163","messageId":"164","endLine":59,"endColumn":10},{"ruleId":"161","severity":1,"message":"206","line":100,"column":7,"nodeType":"163","messageId":"164","endLine":100,"endColumn":14},{"ruleId":"161","severity":1,"message":"198","line":181,"column":12,"nodeType":"163","messageId":"164","endLine":181,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":192,"column":20,"nodeType":"181","messageId":"182","endLine":192,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":192,"column":37,"nodeType":"181","messageId":"182","endLine":192,"endColumn":39},{"ruleId":"179","severity":1,"message":"180","line":221,"column":19,"nodeType":"181","messageId":"182","endLine":221,"endColumn":21},{"ruleId":"161","severity":1,"message":"207","line":296,"column":7,"nodeType":"163","messageId":"164","endLine":296,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":1,"column":1,"nodeType":"210","messageId":"182","fix":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'user' is assigned a value but never used.","'clearInputs' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'auth' is defined but never used.","'board' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'exist' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Component' is defined but never used.","'ContactsOutlined' is defined but never used.","'CanvasJS' is assigned a value but never used.","'ControlPointDuplicateOutlined' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'SentimentSatisfied' is defined but never used.","'styles' is assigned a value but never used.","'writer_id' is assigned a value but never used.","'like' is assigned a value but never used.","'NoSsr' is defined but never used.","'Select' is defined but never used.","'useAutocomplete' is defined but never used.","'CheckIcon' is defined but never used.","'InputWrapper' is assigned a value but never used.","'Tag' is assigned a value but never used.","'Listbox' is assigned a value but never used.","'tagContent' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"214","text":"215"},"no-global-assign","no-unsafe-negation",[-1,0],""]