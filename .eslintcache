[{"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\index.js":"1","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\App.js":"2","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\reportWebVitals.js":"3","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Lecture_review_main.js":"4","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Login.js":"5","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Camp_review_write.js":"6","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Lecture_review_write.js":"7","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Camp_review_detail.js":"8","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Community_view_write.js":"9","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Camp_review_main.js":"10","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Community_view_main.js":"11","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Community_view_detail.js":"12","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Solution_main.js":"13","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Mypage.js":"14","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Main.js":"15","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Lecture_review_detail.js":"16","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\firebase.js":"17","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\canvasjs.react.js":"18","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\canvasjs.min.js":"19","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Solution_write.js":"20","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Solution_detail.js":"21"},{"size":494,"mtime":1608105890440,"results":"22","hashOfConfig":"23"},{"size":9846,"mtime":1608118563800,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1607349606333,"results":"25","hashOfConfig":"23"},{"size":8686,"mtime":1608108410792,"results":"26","hashOfConfig":"23"},{"size":5869,"mtime":1608021383580,"results":"27","hashOfConfig":"23"},{"size":9480,"mtime":1608098068127,"results":"28","hashOfConfig":"23"},{"size":16945,"mtime":1608098933411,"results":"29","hashOfConfig":"23"},{"size":10801,"mtime":1608111540819,"results":"30","hashOfConfig":"23"},{"size":9288,"mtime":1608097985852,"results":"31","hashOfConfig":"23"},{"size":10187,"mtime":1608108410788,"results":"32","hashOfConfig":"23"},{"size":5513,"mtime":1608108410789,"results":"33","hashOfConfig":"23"},{"size":10817,"mtime":1608111569356,"results":"34","hashOfConfig":"23"},{"size":5547,"mtime":1608108410793,"results":"35","hashOfConfig":"23"},{"size":18599,"mtime":1608116922549,"results":"36","hashOfConfig":"23"},{"size":17286,"mtime":1608121185642,"results":"37","hashOfConfig":"23"},{"size":15012,"mtime":1608111522597,"results":"38","hashOfConfig":"23"},{"size":689,"mtime":1607349606332,"results":"39","hashOfConfig":"23"},{"size":2080,"mtime":1608036326032,"results":"40","hashOfConfig":"23"},{"size":479376,"mtime":1608036326031,"results":"41","hashOfConfig":"23"},{"size":8817,"mtime":1608097981507,"results":"42","hashOfConfig":"23"},{"size":10405,"mtime":1608111556696,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hjeeea",{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\index.js",[],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\App.js",["92","93","94","95"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\reportWebVitals.js",[],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Lecture_review_main.js",["96","97","98","99","100","101","102","103"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Paper, Button } from '@material-ui/core';\nimport './total.css';\nimport { db } from './firebase.js';\nimport { ContactsOutlined } from '@material-ui/icons';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Lecture_review_main extends React.Component {\n    Constructor(props) {\n        this.myRef = React.createRef();\n    }\n\n    getUrlParams() {\n        let params = {};\n        params[\"search_exist\"] = false;\n        params[\"order_by\"] = \"date\";\n\n        let exist = false;\n        window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; params[key+\"_exist\"] = true;});\n\n        return params;\n    }\n\n    // 렌더링 후 완료\n    componentDidMount = () => {\n        {\n            console.log(\"bddd\");\n            let params = this.getUrlParams();\n            let search;\n            if(params.search_exist) {\n                search = decodeURI(params.search).toLowerCase();\n                if(search.indexOf(23))\n                {\n                    search = search.replace(\"%23\", \"#\");\n                }\n                console.log(search);\n            }\n            console.log(params.board);\n            let board = decodeURI(params.board);\n            console.log(board);\n\n            db.collection(\"reviews\")\n            .orderBy(params.order_by,\"desc\")\n            .onSnapshot(snaps => {\n                snaps.forEach(doc => {\n                    let lec_name = doc.data().lecture_name.toLowerCase();\n                    let tag_name = doc.data().tags;\n                    console.log(doc);\n                    if (params.board == doc.data().board || (params.search_exist && lec_name.indexOf(search) != -1) || (params.search_exist && tag_name.indexOf(search) != -1)){\n                        \n                        const reviewDiv = document.createElement(\"div\");\n\n                        let htmlContent =\n                            \"<div class=\\\"review\\\">\\\n                                <ul>\\\n                                    <li class=\\\"item\\\">\\\n                                        <div id='site_box'>\\\n                                            <a href=\\\"https://www.acmicpc.net/\\\">백준</a>\\\n                                        </div>\\\n                                        <div class=\\\"info\\\">\\\n                                            <a href='/Lecture_review_detail?board=\"+board+\"&id=\"+doc.id+\"'><div class=\\\"title\\\">\"+ doc.data().lecture_name + \"</div></a>\\\n                                            <div class=\\\"rank\\\">\"+ this.printStar(doc.data().star) + \"</div>\\\n                                            <div class=\\\"tag\\\">\"+ doc.data().tags + \"</div>\\\n                                            <Button onClick=\\\"location.href='/Lecture_review_main?search=\"+doc.data().lecture_name+\"'\\\" variant=\\\"outlined\\\" color=\\\"primary\\\" type=\\\"submit\\\">이 강의만 모아보기</Button>\\\n                                        </div>\\\n                                        <div class=\\\"like\\\">\\\n                                            <span class=\\\"date\\\">\"+ doc.data().date + \"</span>\\\n                                            <div class=\\\"likebtn\\\">\\\n                                                <i class=\\\"fas fa-heart\\\">♥</i>\\\n                                                <div class=\\\"likepeople\\\">\"+ doc.data().like + \"</div>\\\n                                            </div>\\\n                                            <span class=\\\"writer\\\">작성자 : \"+ doc.data().writer_name + \"</span>\\\n                                        </div>\\\n                                    </li>\\\n                                </ul>\\\n                            </div>\";\n\n                        reviewDiv.innerHTML = htmlContent;\n                        if(this.myRef!=null)\n                        {\n                            this.myRef.appendChild(reviewDiv);\n                        }\n\n                    }\n                })\n            })\n        }\n    }\n   \n    printStar(star) {\n        let ret = \"\";\n\n        for (let i = 0; i < 5; i++) {\n            if (i < star) ret += \"★\";\n            else ret += \"☆\";\n        }\n\n        return ret;\n    }\n\n    makeChartContent() {\n        let dataPoints = [];\n        let DP;\n\n        db.collection(\"lecture\").orderBy(\"review_num\", \"desc\")\n        .onSnapshot(snaps => {\n            snaps.forEach(doc => {\n                DP = {y: doc.data().star, label: doc.data().name};\n                dataPoints.push(DP);\n            })\n        })\n\n        console.log(dataPoints);\n\n        return dataPoints;\n    }\n\n    // 렌더링\n    render() {\n        let params = this.getUrlParams();\n        let board = params.search_exist ? \"강의 리뷰\" : decodeURI(params.board)\n        let DP = this.makeChartContent()\n        const options = {\n            height: 260,\n            animationEnabled: true,\n            theme: \"light2\", // \"light1\", \"light2\", \"dark1\", \"dark2\"\n            axisY: {\n                title: \"Star\",\n                minimum: 0,\n                maximum: 5,\n                interval: 1\n            },\n            data: [{        \n                type: \"column\", \n                dataPoints: DP\n            }]\n        }\n        \n        return (\n            <div className=\"Lecture_review_main\" class=\"main_body\">\n                <div className=\"sidebar\">\n                    <aside class=\"sidebar\">\n                        <p>언어</p>\n                        <ul class=\"category\">\n                            <li><a href=\"/Lecture_review_main?board=C/C++\">C/C++</a></li>\n                            <li><a href=\"/Lecture_review_main?board=C#\">C#</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Java\">Java</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Python\">Python</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Javascript\">Javascript</a></li>\n                        </ul>\n                        <p>분야</p>\n                        <ul class=\"category\">\n                            <li><a href=\"/Lecture_review_main?board=Algorithm\">Algorithm</a></li>\n                            <li><a href=\"/Lecture_review_main?board=FrontEnd\">FrontEnd</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Server\">Server</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Database\">Database</a></li>\n                            <li><a href=\"/Lecture_review_main?board=ML/DL\">ML/DL</a></li>\n                        </ul>\n                    </aside>\n                </div>\n                <article class=\"article\" style={{width: \"43vw\"}}>\n                    <Paper classname=\"paper\" elevation={2}>\n                        <div class=\"review_search\">\n                            <div class=\"category_name\">\n                            <span>{board}</span>\n                            </div>\n                            <form class=\"search\">\n                                <button>\n                                    <i class=\"fas fa-search\"></i>\n                                </button>\n                                <input class=\"keyword\" type=\"text\" name=\"search\" size=\"80\" placeholder=\"게시판에서 검색\"></input>\n                            </form>\n                            <div class=\"write_button\">\n                                <Link to={'/Lecture_review_write?board='+board}><Button variant=\"contained\" type=\"submit\" id=\"write_btn\">글 작성</Button></Link>\n                            </div>\n                        </div>\n                        <div class=\"chart\">\n                            <CanvasJSChart options = {options} />\n                        </div>\n                        <div class=\"header\">\n                            <span>링크</span>\n                            <span>내용</span>\n                            <div class=\"btn\">\n                            <button><a href={\"/Lecture_review_main?board=\"+board}>작성날짜△</a></button>\n                            <button><a href={\"/Lecture_review_main?board=\"+board+\"&order_by=like\"}>좋아요△</a></button>\n                            </div>\n                        </div>\n                        <div id=\"reviews\" ref={(DOMNodeRef) => {\n                            this.myRef=DOMNodeRef;\n                        }}>\n                        </div>\n                    </Paper>\n                </article>\n            </div>\n            \n        )\n    };\n}\n\nexport default Lecture_review_main;\n",["104","105"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Login.js",["106","107","108","109","110","111","112"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Camp_review_write.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Lecture_review_write.js",["127","128","129","130","131","132","133","134","135","136"],"import React, { useState } from 'react';\nimport './total.css';\nimport { Snackbar, NoSsr, Select, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\nimport { db } from './firebase.js';\nimport firebase from 'firebase';\nimport { Link, Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SentimentSatisfied } from '@material-ui/icons';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n// Paper 태그 스타일\nconst styles = ({ spacing: { unit } }) => ({\n    paper: {\n        margin: `${unit * 3}px auto`,\n        padding: unit * 2,\n        maxWidth: 400\n    }\n})\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nconst InputWrapper = styled('div')`\n&:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    height: 30px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n    <div {...props}>\n        <span>{label}</span>\n        <CloseIcon id='x' onClick={onDelete} />\n    </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: #fafafa;\n  border: 1px solid #e8e8e8;\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  #x {\n      font-size:25px;\n  }\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled('ul')`\n  width: 300px;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\n// 오늘 날짜\nconst today = new Date();\n\n// 게시글 작성\nconst Lecture_review_write = () => {\n    // 알림창\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // 빈칸 방지\n    const classes = useStyles();\n    const [openBar, setOpenBar] = React.useState(false);\n\n    const handleClickBar = () => {\n        setOpenBar(true);\n    };\n\n    const handleCloseBar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpenBar(false);\n    };\n\n    let params = {};\n    window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (str, key, value) { params[key] = value; });\n\n    // 데이터 변수\n    const [writer_id, setWriterId] = useState(\"\");\n    const [writer_name, setWriterName] = useState(\"\");\n    const [lecture_name, setLectureName] = useState(\"\");\n    const [star, setStar] = useState(\"\");\n    const [tags, setTags] = useState([]);\n    const [period, setPeriod] = useState(\"\");\n    const [cost, setCost] = useState(\"\");\n    const [pros, setPros] = useState(\"\");\n    const [cons, setCons] = useState(\"\");\n    const [link, setLink] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [like, setLike] = useState(\"\");\n    const [board, setBoard] = useState(params.board);\n\n    // 데이터 저장\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        handleClose();\n\n        // 빈칸 방지\n        if ((lecture_name == \"\") || (star == null) || (tags == null) || (period == null) || (cost == null) || (pros == null) || (cons == null) || (link == null) || (date == null)) {\n            handleClickBar();\n        }\n        else {\n            db.collection(\"users\").doc(firebase.auth().currentUser.uid).get()\n                .then(doc => {\n\n                    db.collection(\"reviews\").add({\n                        writer_id: firebase.auth().currentUser.uid,\n                        writer_name: doc.data().nickname,\n                        lecture_name: lecture_name,\n                        star: star,\n                        tags: tags,\n                        period: period,\n                        cost: cost,\n                        pros: pros,\n                        cons: cons,\n                        link: link,\n                        date: today.toLocaleString(),\n                        like: 0,\n                        board: board\n                    })\n                        .then((docRef) => {\n                            window.location.href = \"/Lecture_review_detail?board=\" + params.board + \"&id=\" + docRef.id;\n                        })\n                        .catch((error) => {\n                            alert(error.message);\n                        });\n                });\n\n            setWriterId(\"\");\n            setLectureName(\"\");\n            setStar(\"\");\n            setTags(\"\");\n            setPeriod(\"\");\n            setCost(\"\");\n            setPros(\"\");\n            setCons(\"\");\n            setPeriod(\"\");\n            setCost(\"\");\n            setLink(\"\");\n            setDate(\"\");\n            setLike(\"\");\n            setBoard(\"\");\n            setWriterName(\"\");\n        }\n    };\n\n    // 태그 관련 변수\n    const {\n        getRootProps,\n        getInputProps,\n        getTagProps,\n        getListboxProps,\n        getOptionProps,\n        groupedOptions,\n        value,\n        focused,\n        setAnchorEl,\n    } = useAutocomplete({\n        id: 'customized-hook-demo',\n        multiple: true,\n        options: tagContent,\n        disableClearble: false,\n        getOptionLabel: (option) => option.title,\n        onChange: (e, value) => {\n            let i = 0;\n            let content = \"\";\n            for (i = 0; i < value.length; i++) {\n                content += value[i].title;\n\n            }\n            setTags(content);\n        }\n    });\n\n    // 엔터키\n    const keyHandleClickOpen = (e) => {\n        if (e.key == 'Enter') {\n            handleClickOpen();\n        }\n    }\n\n    // 렌더링\n    return (\n        <div className=\"Lecture_review_write\" class=\"main_body\">\n            <div className={classes.root}>\n                <Snackbar open={openBar} autoHideDuration={6000} onClose={handleCloseBar}>\n                    <Alert onClose={handleCloseBar} severity=\"error\">\n                        빈칸 없이 입력해주세요\n                    </Alert>\n                </Snackbar>\n            </div>\n            <div className=\"sidebarclass\">\n                <aside class=\"sidebar\">\n                    <p>언어</p>\n                    <ul class=\"category\">\n                        <li><a href=\"/Lecture_review_main?board=C/C++\">C/C++</a></li>\n                        <li><a href=\"/Lecture_review_main?board=C#\">C#</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Java\">Java</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Python\">Python</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Javascript\">Javascript</a></li>\n                    </ul>\n                    <p>분야</p>\n                    <ul class=\"category\">\n                        <li><a href=\"/Lecture_review_main?board=Algorithm\">Algorithm</a></li>\n                        <li><a href=\"/Lecture_review_main?board=FrontEnd\">FrontEnd</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Server\">Server</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Database\">Database</a></li>\n                        <li><a href=\"/Lecture_review_main?board=ML/DL\">ML/DL</a></li>\n                    </ul>\n                </aside>\n            </div>\n            <article class=\"article\">\n                <Paper classname=\"paper\" elevation={3}>\n                <div class=\"category_name category_name_write_page\">\n                    <span>{decodeURI(params.board)}</span>\n                </div>\n                    <form className=\"form\" onSubmit={handleSubmit}>\n                        <section id=\"lecture-name\" class=\"writing-block\">\n                            <div class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span>강좌 이름 :</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <input type=\"text\" id=\"name\" class=\"short-text\" list=\"lecture-list\" value={lecture_name} onChange={(e) => setLectureName(e.target.value)}></input>\n                                    <datalist id=\"lecture-list\">\n                                        <option value=\"유튜브 클론코딩\"></option>\n                                        <option value=\"Amazing, awesome, incredible!\"></option>\n                                    </datalist>\n                                </div>\n                            </div>\n                        </section>\n\n                        <section id=\"contants\" class=\"writing-block\">\n                            <div id=\"star\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">별점</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <Select id=\"star-score\" value={star} onChange={(e) => setStar(e.target.value)}>\n                                        <option value=\"5\">★★★★★</option>\n                                        <option value=\"4\">★★★★☆</option>\n                                        <option value=\"3\">★★★☆☆</option>\n                                        <option value=\"2\">★★☆☆☆</option>\n                                        <option value=\"1\">★☆☆☆☆</option>\n                                    </Select>\n                                </div>\n                            </div>\n\n                            <div id=\"hashtags\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">태그</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <ul class=\"tags\">\n\n                                        <div>\n                                            <div {...getRootProps()}>\n                                                <InputWrapper id=\"tagstyle\" ref={setAnchorEl} className={focused ? 'focused' : ''}>\n                                                    {value.map((option, index) => (\n                                                        <Tag label={option.title} {...getTagProps({ index })} />\n                                                    ))}\n                                                    <input type=\"text\" id=\"tag\"{...getInputProps()}></input>\n                                                </InputWrapper>\n                                            </div>\n                                            {groupedOptions.length > 0 ? (\n                                                <Listbox {...getListboxProps()}>\n                                                    {groupedOptions.map((option, index) => (\n                                                        <li {...getOptionProps({ option, index })}>\n                                                            <span>{option.title}</span>\n                                                            <CheckIcon fontSize=\"small\" />\n                                                        </li>\n                                                    ))}\n                                                </Listbox>\n                                            ) : null}\n                                        </div>\n\n                                    </ul>\n                                </div>\n                            </div>\n\n                            <div id=\"lecture-info\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">수강 정보</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <span>수강 기간 : </span>\n                                    <input type=\"text\" id=\"period\" value={period} onChange={(e) => setPeriod(e.target.value)}></input>\n                                    <span> / 수강 비용 : </span>\n                                    <input type=\"text\" id=\"cost\" value={cost} onChange={(e) => setCost(e.target.value)}></input>\n                                </div>\n                            </div>\n\n                            <div id=\"pros\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">장점</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <input type=\"text\" id=\"pros\" class=\"long-text\" value={pros} onChange={(e) => setPros(e.target.value)}></input>\n                                </div>\n                            </div>\n\n                            <div id=\"cons\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">단점</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <input type=\"text\" id=\"cons\" class=\"long-text\" value={cons} onChange={(e) => setCons(e.target.value)} />\n                                </div>\n                            </div>\n\n                            <div id=\"link\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">강의 링크</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <input type=\"text\" id=\"link\" class=\"short-text\" value={link} onChange={(e) => setLink(e.target.value)}></input>\n                                </div>\n                            </div>\n                        </section>\n\n                        <section id=\"submit-button\">\n                            <Button variant=\"contained\" onClick={handleClickOpen} onKeyPress={keyHandleClickOpen}>글 작성</Button>\n                            <Dialog\n                                open={open}\n                                onClose={handleClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                                <DialogTitle id=\"alert-dialog-title\">{\"리뷰 작성\"}</DialogTitle>\n                                <DialogContent>\n                                    <DialogContentText id=\"alert-dialog-description\">\n                                        리뷰를 저장하시겠습니까?\n                                        </DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={handleClose} color=\"primary\">취소</Button>\n                                    <Button type=\"submit\" onClick={handleSubmit} color=\"primary\" autoFocus>확인</Button>\n                                </DialogActions>\n                            </Dialog>\n                        </section>\n                    </form>\n                </Paper>\n            </article>\n        </div>\n    );\n}\n\n\n// 태그 종류\nconst tagContent = [\n    { title: '#쉬워요 ' },\n    { title: '#적당해요 ' },\n    { title: '#어려워요 ' },\n    { title: '#효과적이에요 ' },\n    { title: '#전체_구조를_보여줘요 ' },\n    { title: '#실무적이에요' }\n];\n\nexport default Lecture_review_write;\n","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Camp_review_detail.js",["137","138","139","140","141","142","143","144"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Community_view_write.js",["145","146","147","148","149","150","151","152","153","154","155","156","157"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Camp_review_main.js",["158","159","160","161"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport './total.css';\r\nimport { db } from './firebase.js';\r\n\r\nclass Camp_review_main extends Component {\r\n    Constructor(props) {\r\n        this.myRef = React.createRef();\r\n\r\n    }\r\n\r\n    printStar(star) {\r\n        let ret = \"\";\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            if (i < star) ret += \"★\";\r\n            else ret += \"☆\";\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    getUrlParams() {\r\n        let params = {};\r\n        params[\"search_exist\"] = false;\r\n\r\n        let exist = false;\r\n        window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; params[key+\"_exist\"] = true;});\r\n\r\n        return params;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        {   \r\n            let params = this.getUrlParams();\r\n            let search;\r\n            if(params.search_exist) {\r\n                search = decodeURI(params.search).toLowerCase();\r\n                console.log(search);\r\n            }\r\n            console.log(params.board);\r\n            let board = decodeURI(params.board);\r\n            console.log(board);\r\n\r\n            db.collection(\"postings\")\r\n                .onSnapshot(snaps => {\r\n                    snaps.forEach(doc => {\r\n                        let title = doc.data().title.toLowerCase();\r\n                        console.log(title);\r\n                        if (params.board == doc.data().board || (params.search_exist && title.indexOf(search) != -1)){\r\n                            const reviewDiv = document.createElement(\"div\");\r\n\r\n                            const htmlContent =\r\n                                \"<div class=\\\"review\\\">\\\r\n                                    <ul>\\\r\n                                        <li class=\\\"item\\\">\\\r\n                                            <a href=\\\"#\\\"><img src=\\\"image.jpg\\\" alt=\\\"\\\" width=\\\"100\\\"></img></a>\\\r\n                                            <div class=\\\"info\\\">\\\r\n                                            <a href='/Camp_review_detail?board=\"+board+\"&id=\"+doc.id+\"'><div class=\\\"title\\\">\"+doc.data().title+\"</div></a>\\\r\n                                            </div>\\\r\n                                            <div class=\\\"like\\\">\\\r\n                                                <span class=\\\"date\\\">\"+doc.data().date+\"</span>\\\r\n                                                <div class=\\\"likebtn\\\">\\\r\n                                                    <i class=\\\"fas fa-heart\\\">♥</i>\\\r\n                                                <div class=\\\"likepeople\\\">\"+doc.data().like+\"</div>\\\r\n                                                </div>\\\r\n                                            <span class=\\\"writer\\\">작성자 : \"+doc.data().writer_name+\"</span>\\\r\n                                            </div>\\\r\n                                        </li>\\\r\n                                    </ul>\\\r\n                                </div>\";\r\n\r\n                            reviewDiv.innerHTML = htmlContent;\r\n                            if(this.myRef!=null)\r\n                        {\r\n                            this.myRef.appendChild(reviewDiv);\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    // 렌더링\r\n    render() {\r\n        let params = this.getUrlParams();\r\n        let board = params.search_exist ? \"캠프 리뷰\" : decodeURI(params.board)\r\n        \r\n        return (\r\n            <div className=\"Lecture_review_main\">\r\n            <div className=\"sidebar\">\r\n                <aside class=\"sidebar\" style={{width:\"25%\"}}>\r\n                    <ul class=\"category_camp\">\r\n                        <li><a href=\"/Camp_review_main?board=알고리즘\">알고리즘</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=웹프로그래밍\">웹프로그래밍</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=데이터 분석\">데이터분석</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=AI\">AI</a></li>\r\n                    </ul>\r\n                    <div class='schedule'>\r\n                        <article class=\"mainarticle\">\r\n                            <p class='small_title_cal'>12월의 일정</p>\r\n                            <table class=\"tg\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"sunday\">일</th>\r\n                                        <th class=\"weekday\">월</th>\r\n                                        <th class=\"weekday\">화</th>\r\n                                        <th class=\"weekday\">수</th>\r\n                                        <th class=\"weekday\">목</th>\r\n                                        <th class=\"weekday\">금</th>\r\n                                        <th class=\"saturday\">토</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"day\" style={{ color: \"green\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"purple\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"purple\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"orange\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"green\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"orange\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\">●</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"purple\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\"></td>\r\n                                        <td class=\"day\" style={{ color: \"green\" }}>●</td>\r\n                                        <td class=\"day\"></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </article>\r\n                    </div>\r\n                    <br></br>\r\n                    <div class='schedule2'>\r\n                        <h4 style={{ color: \"green\", display: \"inline-block\" }}>●</h4>&nbsp;\r\n                        <h4 style={{ color: \"#585858\", display: \"inline-block\" }}> 대회 </h4>&nbsp;\r\n                        <h4 style={{ color: \"#purple\", display: \"inline-block\" }}>● </h4>&nbsp;\r\n                        <h4 style={{ color: \"#585858\", display: \"inline-block\" }}> 캠프 </h4>&nbsp;\r\n                        <h4 style={{ color: \"#orange\", display: \"inline-block\" }}>● </h4>&nbsp;\r\n                        <h4 style={{ color: \"#585858\", display: \"inline-block\" }}> 채용 </h4>&nbsp;\r\n                    </div>\r\n                    <br></br>\r\n                    <div class='schedule3'>\r\n                        <p> ◦ 1일 2020 E-PEER</p>\r\n                        <p> ◦ 5일 Google 코딩 부트 캠프</p>\r\n                        <p> ◦ 11일 2020 하반기 삼성전자 공채</p>\r\n                        <p> ◦ 13일 Google CodeJam</p>\r\n                        <p> ◦ 19일 Sk c&c 딥러닝 R&D</p>\r\n                    </div>\r\n                </aside>\r\n            </div>\r\n\r\n                <article class=\"article\">\r\n                <Paper classname=\"paper\" elevation={2}>\r\n                    <div class=\"review_search\">\r\n                        <div class=\"category_name\">\r\n                            <span>{board}</span>\r\n                        </div>\r\n                        <div>\r\n                            <form class=\"search\">\r\n                                <input class=\"keyword\" type=\"text\" name=\"search\" size=\"80\"></input>\r\n                            </form>\r\n                        </div>\r\n                        <Link to={'/Camp_review_write?board='+board}><Button id='write_btn' variant=\"outlined\" type=\"submit\">글작성</Button></Link>\r\n                    </div>\r\n\r\n                    <div class=\"header\">\r\n                        <span>제목</span>\r\n                        <div class=\"btn\">\r\n                            <button>작성날짜△</button>\r\n                            <button>조회수△</button>\r\n                            <button>좋아요</button>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"posting\" ref={(DOMNodeRef) => {\r\n                 this.myRef=DOMNodeRef;\r\n                }}>\r\n                    </div>\r\n                    </Paper>\r\n                </article>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Camp_review_main;\r\n","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Community_view_main.js",["162","163","164","165"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport './total.css';\r\nimport { db } from './firebase.js';\r\n\r\nclass Community_view_main extends Component {\r\n    Constructor(props) {\r\n        this.myRef = React.createRef();\r\n\r\n    }\r\n\r\n    // 렌더링 후 완료\r\n    getUrlParams() {\r\n        let params = {};\r\n        params[\"search_exist\"] = false;\r\n        params[\"order_by\"] = \"date\";\r\n\r\n        let exist = false;\r\n        window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; params[key+\"_exist\"] = true;});\r\n\r\n        return params;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        {   \r\n            let params = this.getUrlParams();\r\n            let search;\r\n            if(params.search_exist) {\r\n                search = decodeURI(params.search).toLowerCase();\r\n                console.log(search);\r\n            }\r\n            console.log(params.board);\r\n            let board = decodeURI(params.board);\r\n            console.log(board);\r\n\r\n            db.collection(\"community\")\r\n            .orderBy(params.order_by,\"desc\")\r\n            .onSnapshot(snaps => {\r\n                snaps.forEach(doc => {\r\n                    let title = doc.data().title.toLowerCase();\r\n                    console.log(title);\r\n                    if (params.board == doc.data().board || (params.search_exist && title.indexOf(search) != -1)){\r\n                        const reviewDiv = document.createElement(\"div\");\r\n\r\n                        const htmlContent =\r\n                            \"<div class=\\\"review\\\">\\\r\n                                <ul>\\\r\n                                    <li class=\\\"item\\\">\\\r\n                                        <a href=\\\"#\\\"><img src=\\\"image.jpg\\\" alt=\\\"\\\" width=\\\"100\\\"></img></a>\\\r\n                                        <div class=\\\"info\\\">\\\r\n                                        <a href='/Community_view_detail?board=\"+board+\"&id=\"+doc.id+\"'><div class=\\\"title\\\">\"+doc.data().title+\"</div></a>\\\r\n                                        </div>\\\r\n                                        <div class=\\\"like\\\">\\\r\n                                            <span class=\\\"date\\\">\"+doc.data().date+\"</span>\\\r\n                                            <div class=\\\"likebtn\\\">\\\r\n                                                <i class=\\\"fas fa-heart\\\">♥</i>\\\r\n                                            <div class=\\\"likepeople\\\">\"+doc.data().like+\"</div>\\\r\n                                            </div>\\\r\n                                        <span class=\\\"writer\\\">작성자 : \"+doc.data().writer_name+\"</span>\\\r\n                                        </div>\\\r\n                                    </li>\\\r\n                                </ul>\\\r\n                            </div>\";\r\n\r\n                        reviewDiv.innerHTML = htmlContent;\r\n                        if(this.myRef!=null)\r\n                        {\r\n                            this.myRef.appendChild(reviewDiv);\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    // 렌더링\r\n    render() {\r\n        let params = this.getUrlParams();\r\n        let board = params.search_exist ? \"커뮤니티\" : decodeURI(params.board)\r\n\r\n        return (\r\n            <div className=\"Lecture_review_main\">\r\n                <div className=\"sidebar\">\r\n                    <aside class=\"sidebar\">\r\n                        <li><a href=\"/Community_view_main?board=자유게시판\">자유게시판</a></li>\r\n                        <li><a href=\"/Community_view_main?board=질문게시판\">질문게시판</a></li>\r\n                        <li><a href=\"/Community_view_main?board=강의 수강원 모집\">강의 수강원 모집</a></li>\r\n                        <li><a href=\"/Community_view_main?board=프로젝트 참가자 모집\">프로젝트 참가자 모집</a></li>\r\n                    </aside>\r\n                </div>\r\n                <article class=\"article\">\r\n                <Paper classname=\"paper\" elevation={2}>\r\n                    <div class=\"review_search\">\r\n                        <div class=\"category_name\">\r\n                            <span>{board}</span>\r\n                        </div>\r\n                        <div>\r\n                            <form class=\"search\">\r\n                                <input class=\"keyword\" type=\"text\" name=\"search\" size=\"80\"></input>\r\n                            </form>\r\n                        </div>\r\n                        <Link to={'/Community_view_write?board='+board}><Button id='write_btn' variant=\"outlined\" type=\"submit\">글작성</Button></Link>\r\n                    </div>\r\n\r\n                    <div class=\"header\">\r\n                        <span>링크</span>\r\n                        <span>내용</span>\r\n                        <div class=\"btn\">\r\n                            <button><a href={\"/Community_view_main?board=\"+board}>작성날짜△</a></button>\r\n                            <button><a href={\"/Community_view_main?board=\"+board+\"&order_by=like\"}>좋아요△</a></button>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"posting\" ref={(DOMNodeRef) => {\r\n                 this.myRef=DOMNodeRef;\r\n                }}>\r\n                    </div>\r\n                    </Paper>\r\n                </article>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Community_view_main;\r\n","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Community_view_detail.js",["166","167","168","169","170","171","172","173"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Solution_main.js",["174","175","176","177"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport './total.css';\r\nimport { db } from './firebase.js';\r\n\r\nclass Solution_main extends Component {\r\n    Constructor(props) {\r\n        this.myRef = React.createRef();\r\n\r\n    }\r\n\r\n        // 렌더링 후 완료\r\n        getUrlParams() {\r\n            let params = {};\r\n            params[\"search_exist\"] = false;\r\n    \r\n            let exist = false;\r\n            window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; params[key+\"_exist\"] = true;});\r\n    \r\n            return params;\r\n        }\r\n    \r\n        componentDidMount = () => {\r\n            {   \r\n                let params = this.getUrlParams();\r\n                let search;\r\n                if(params.search_exist) {\r\n                    search = decodeURI(params.search).toLowerCase();\r\n                    console.log(search);\r\n                }\r\n                console.log(params.board);\r\n                let board = decodeURI(params.board);\r\n                console.log(board);\r\n    \r\n                db.collection(\"solution\")\r\n                    .onSnapshot(snaps => {\r\n                        snaps.forEach(doc => {\r\n                            let title = doc.data().title//.toLowerCase();\r\n                            console.log(title);\r\n                            if (params.board == doc.data().board || (params.search_exist && title.indexOf(search) != -1)){\r\n                                const reviewDiv = document.createElement(\"div\");\r\n    \r\n                                const htmlContent =\r\n                                    \"<div class=\\\"review\\\">\\\r\n                                        <ul>\\\r\n                                            <li class=\\\"item\\\">\\\r\n                                                <a href=\\\"#\\\"><img src=\\\"image.jpg\\\" alt=\\\"\\\" width=\\\"100\\\"></img></a>\\\r\n                                                <div class=\\\"info\\\">\\\r\n                                                <a href='/Solution_detail?board=\"+board+\"&id=\"+doc.id+\"'><div class=\\\"title\\\">\"+doc.data().title+\"</div></a>\\\r\n                                                </div>\\\r\n                                                <div class=\\\"like\\\">\\\r\n                                                    <span class=\\\"date\\\">\"+doc.data().date+\"</span>\\\r\n                                                    <div class=\\\"likebtn\\\">\\\r\n                                                        <i class=\\\"fas fa-heart\\\">♥</i>\\\r\n                                                    <div class=\\\"likepeople\\\">\"+doc.data().like+\"</div>\\\r\n                                                    </div>\\\r\n                                                <span class=\\\"writer\\\">작성자 : \"+doc.data().writer_name+\"</span>\\\r\n                                                </div>\\\r\n                                            </li>\\\r\n                                        </ul>\\\r\n                                    </div>\";\r\n    \r\n                                reviewDiv.innerHTML = htmlContent;\r\n                                if(this.myRef!=null)\r\n                            {\r\n                                this.myRef.appendChild(reviewDiv);\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    \r\n        // 렌더링\r\n        render() {\r\n            let params = this.getUrlParams();\r\n            let board = params.search_exist ? \"솔루션\" : decodeURI(params.board)\r\n    \r\n            return (\r\n                <div className=\"Lecture_review_main\">\r\n                    <div className=\"sidebar\">\r\n                        <aside class=\"sidebar\">\r\n                            <li><a href=\"/Solution_main?board=솔루션\">솔루션</a></li>\r\n                            <br></br>\r\n                        </aside>\r\n                    </div>\r\n                    <article class=\"article\">\r\n                    <Paper classname=\"paper\" elevation={2}>\r\n                        <div class=\"review_search\">\r\n                            <div class=\"category_name\">\r\n                                <span>{board}</span>\r\n                            </div>\r\n                            <div>\r\n                                <form class=\"search\">\r\n                                    <input class=\"keyword\" type=\"text\" name=\"search\" size=\"80\"></input>\r\n                                </form>\r\n                            </div>\r\n                            <Link to={'/Solution_write?board='+board}><Button id='write_btn' variant=\"outlined\" type=\"submit\">글작성</Button></Link>\r\n                        </div>\r\n    \r\n                        <div class=\"header\">\r\n                            <span>링크</span>\r\n                            <span>내용</span>\r\n                            <div class=\"btn\">\r\n                                <button>작성날짜△</button>\r\n                                <button>조회수△</button>\r\n                                <button>좋아요</button>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"posting\" ref={(DOMNodeRef) => {\r\n                     this.myRef=DOMNodeRef;\r\n                    }}>\r\n                        </div>\r\n                        </Paper>\r\n                    </article>\r\n                </div>\r\n            )\r\n        };\r\n    }\r\n\r\nexport default Solution_main;\r\n","C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Mypage.js",["178","179","180","181","182","183","184","185","186","187","188","189"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Main.js",["190","191","192","193","194","195","196","197","198","199"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Lecture_review_detail.js",["200","201","202","203","204","205","206","207","208","209","210","211","212"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\firebase.js",[],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\canvasjs.react.js",["213"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\canvasjs.min.js",[],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Solution_write.js",["214","215","216","217","218","219","220","221","222","223","224","225","226"],"C:\\Users\\YUHYEONJUNG\\Desktop\\오픈SW플랫폼\\PReview\\src\\Solution_detail.js",["227","228","229","230","231","232","233","234"],{"ruleId":"235","severity":1,"message":"236","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":14},{"ruleId":"235","severity":1,"message":"239","line":6,"column":16,"nodeType":"237","messageId":"238","endLine":6,"endColumn":21},{"ruleId":"240","severity":1,"message":"241","line":52,"column":13,"nodeType":"242","messageId":"243","endLine":52,"endColumn":111},{"ruleId":"244","severity":1,"message":"245","line":64,"column":134,"nodeType":"246","endLine":64,"endColumn":170},{"ruleId":"235","severity":1,"message":"247","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":26},{"ruleId":"235","severity":1,"message":"248","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":26},{"ruleId":"235","severity":1,"message":"249","line":8,"column":5,"nodeType":"237","messageId":"238","endLine":8,"endColumn":13},{"ruleId":"235","severity":1,"message":"250","line":20,"column":13,"nodeType":"237","messageId":"238","endLine":20,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":28,"column":9,"nodeType":"242","messageId":"243","endLine":89,"endColumn":10},{"ruleId":"251","severity":1,"message":"252","line":51,"column":38,"nodeType":"253","messageId":"254","endLine":51,"endColumn":40},{"ruleId":"251","severity":1,"message":"255","line":51,"column":110,"nodeType":"253","messageId":"254","endLine":51,"endColumn":112},{"ruleId":"251","severity":1,"message":"255","line":51,"column":169,"nodeType":"253","messageId":"254","endLine":51,"endColumn":171},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"235","severity":1,"message":"260","line":8,"column":10,"nodeType":"237","messageId":"238","endLine":8,"endColumn":14},{"ruleId":"235","severity":1,"message":"261","line":17,"column":9,"nodeType":"237","messageId":"238","endLine":17,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":31,"column":9,"nodeType":"264","messageId":"265","endLine":40,"endColumn":10},{"ruleId":"262","severity":1,"message":"263","line":48,"column":9,"nodeType":"264","messageId":"265","endLine":56,"endColumn":10},{"ruleId":"251","severity":1,"message":"252","line":87,"column":39,"nodeType":"253","messageId":"254","endLine":87,"endColumn":41},{"ruleId":"251","severity":1,"message":"252","line":130,"column":15,"nodeType":"253","messageId":"254","endLine":130,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":136,"column":15,"nodeType":"253","messageId":"254","endLine":136,"endColumn":17},{"ruleId":"235","severity":1,"message":"266","line":3,"column":20,"nodeType":"237","messageId":"238","endLine":3,"endColumn":25},{"ruleId":"235","severity":1,"message":"267","line":3,"column":27,"nodeType":"237","messageId":"238","endLine":3,"endColumn":33},{"ruleId":"235","severity":1,"message":"268","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":23},{"ruleId":"235","severity":1,"message":"269","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":17},{"ruleId":"235","severity":1,"message":"270","line":19,"column":7,"nodeType":"237","messageId":"238","endLine":19,"endColumn":13},{"ruleId":"235","severity":1,"message":"271","line":35,"column":7,"nodeType":"237","messageId":"238","endLine":35,"endColumn":19},{"ruleId":"235","severity":1,"message":"272","line":59,"column":7,"nodeType":"237","messageId":"238","endLine":59,"endColumn":10},{"ruleId":"235","severity":1,"message":"273","line":100,"column":7,"nodeType":"237","messageId":"238","endLine":100,"endColumn":14},{"ruleId":"235","severity":1,"message":"274","line":182,"column":12,"nodeType":"237","messageId":"238","endLine":182,"endColumn":21},{"ruleId":"235","severity":1,"message":"275","line":183,"column":12,"nodeType":"237","messageId":"238","endLine":183,"endColumn":23},{"ruleId":"251","severity":1,"message":"252","line":194,"column":20,"nodeType":"253","messageId":"254","endLine":194,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":194,"column":37,"nodeType":"253","messageId":"254","endLine":194,"endColumn":39},{"ruleId":"251","severity":1,"message":"252","line":229,"column":19,"nodeType":"253","messageId":"254","endLine":229,"endColumn":21},{"ruleId":"235","severity":1,"message":"276","line":304,"column":7,"nodeType":"237","messageId":"238","endLine":304,"endColumn":17},{"ruleId":"235","severity":1,"message":"266","line":3,"column":20,"nodeType":"237","messageId":"238","endLine":3,"endColumn":25},{"ruleId":"235","severity":1,"message":"277","line":11,"column":10,"nodeType":"237","messageId":"238","endLine":11,"endColumn":14},{"ruleId":"235","severity":1,"message":"278","line":11,"column":16,"nodeType":"237","messageId":"238","endLine":11,"endColumn":24},{"ruleId":"235","severity":1,"message":"279","line":13,"column":10,"nodeType":"237","messageId":"238","endLine":13,"endColumn":28},{"ruleId":"235","severity":1,"message":"270","line":20,"column":7,"nodeType":"237","messageId":"238","endLine":20,"endColumn":13},{"ruleId":"235","severity":1,"message":"274","line":182,"column":12,"nodeType":"237","messageId":"238","endLine":182,"endColumn":21},{"ruleId":"235","severity":1,"message":"275","line":183,"column":12,"nodeType":"237","messageId":"238","endLine":183,"endColumn":23},{"ruleId":"235","severity":1,"message":"280","line":193,"column":12,"nodeType":"237","messageId":"238","endLine":193,"endColumn":16},{"ruleId":"251","severity":1,"message":"252","line":202,"column":27,"nodeType":"253","messageId":"254","endLine":202,"endColumn":29},{"ruleId":"251","severity":1,"message":"252","line":280,"column":19,"nodeType":"253","messageId":"254","endLine":280,"endColumn":21},{"ruleId":"235","severity":1,"message":"267","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":16},{"ruleId":"235","severity":1,"message":"281","line":6,"column":14,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":63,"column":9,"nodeType":"242","messageId":"243","endLine":110,"endColumn":10},{"ruleId":"235","severity":1,"message":"282","line":65,"column":17,"nodeType":"237","messageId":"238","endLine":65,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":67,"column":21,"nodeType":"242","messageId":"243","endLine":81,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":71,"column":54,"nodeType":"253","messageId":"254","endLine":71,"endColumn":56},{"ruleId":"251","severity":1,"message":"252","line":90,"column":37,"nodeType":"253","messageId":"254","endLine":90,"endColumn":39},{"ruleId":"235","severity":1,"message":"283","line":185,"column":13,"nodeType":"237","messageId":"238","endLine":185,"endColumn":18},{"ruleId":"235","severity":1,"message":"266","line":3,"column":20,"nodeType":"237","messageId":"238","endLine":3,"endColumn":25},{"ruleId":"235","severity":1,"message":"267","line":3,"column":27,"nodeType":"237","messageId":"238","endLine":3,"endColumn":33},{"ruleId":"235","severity":1,"message":"268","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":23},{"ruleId":"235","severity":1,"message":"269","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":17},{"ruleId":"235","severity":1,"message":"270","line":19,"column":7,"nodeType":"237","messageId":"238","endLine":19,"endColumn":13},{"ruleId":"235","severity":1,"message":"271","line":35,"column":7,"nodeType":"237","messageId":"238","endLine":35,"endColumn":19},{"ruleId":"235","severity":1,"message":"272","line":59,"column":7,"nodeType":"237","messageId":"238","endLine":59,"endColumn":10},{"ruleId":"235","severity":1,"message":"273","line":100,"column":7,"nodeType":"237","messageId":"238","endLine":100,"endColumn":14},{"ruleId":"235","severity":1,"message":"274","line":181,"column":12,"nodeType":"237","messageId":"238","endLine":181,"endColumn":21},{"ruleId":"235","severity":1,"message":"275","line":182,"column":12,"nodeType":"237","messageId":"238","endLine":182,"endColumn":23},{"ruleId":"251","severity":1,"message":"252","line":193,"column":20,"nodeType":"253","messageId":"254","endLine":193,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":193,"column":37,"nodeType":"253","messageId":"254","endLine":193,"endColumn":39},{"ruleId":"251","severity":1,"message":"252","line":228,"column":19,"nodeType":"253","messageId":"254","endLine":228,"endColumn":21},{"ruleId":"235","severity":1,"message":"250","line":28,"column":13,"nodeType":"237","messageId":"238","endLine":28,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":35,"column":9,"nodeType":"242","messageId":"243","endLine":82,"endColumn":10},{"ruleId":"251","severity":1,"message":"252","line":51,"column":42,"nodeType":"253","messageId":"254","endLine":51,"endColumn":44},{"ruleId":"251","severity":1,"message":"255","line":51,"column":111,"nodeType":"253","messageId":"254","endLine":51,"endColumn":113},{"ruleId":"235","severity":1,"message":"250","line":18,"column":13,"nodeType":"237","messageId":"238","endLine":18,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":25,"column":9,"nodeType":"242","messageId":"243","endLine":72,"endColumn":10},{"ruleId":"251","severity":1,"message":"252","line":41,"column":42,"nodeType":"253","messageId":"254","endLine":41,"endColumn":44},{"ruleId":"251","severity":1,"message":"255","line":41,"column":111,"nodeType":"253","messageId":"254","endLine":41,"endColumn":113},{"ruleId":"235","severity":1,"message":"267","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":16},{"ruleId":"235","severity":1,"message":"281","line":6,"column":14,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":64,"column":9,"nodeType":"242","messageId":"243","endLine":110,"endColumn":10},{"ruleId":"235","severity":1,"message":"282","line":66,"column":17,"nodeType":"237","messageId":"238","endLine":66,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":68,"column":21,"nodeType":"242","messageId":"243","endLine":82,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":72,"column":54,"nodeType":"253","messageId":"254","endLine":72,"endColumn":56},{"ruleId":"251","severity":1,"message":"252","line":91,"column":37,"nodeType":"253","messageId":"254","endLine":91,"endColumn":39},{"ruleId":"235","severity":1,"message":"283","line":185,"column":13,"nodeType":"237","messageId":"238","endLine":185,"endColumn":18},{"ruleId":"235","severity":1,"message":"250","line":18,"column":17,"nodeType":"237","messageId":"238","endLine":18,"endColumn":22},{"ruleId":"240","severity":1,"message":"241","line":25,"column":13,"nodeType":"242","messageId":"243","endLine":72,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":41,"column":46,"nodeType":"253","messageId":"254","endLine":41,"endColumn":48},{"ruleId":"251","severity":1,"message":"255","line":41,"column":115,"nodeType":"253","messageId":"254","endLine":41,"endColumn":117},{"ruleId":"235","severity":1,"message":"267","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":16},{"ruleId":"284","severity":1,"message":"285","line":12,"column":9,"nodeType":"286","endLine":12,"endColumn":13},{"ruleId":"235","severity":1,"message":"250","line":21,"column":13,"nodeType":"237","messageId":"238","endLine":21,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":31,"column":13,"nodeType":"242","messageId":"243","endLine":33,"endColumn":14},{"ruleId":"240","severity":1,"message":"241","line":51,"column":9,"nodeType":"242","messageId":"243","endLine":72,"endColumn":10},{"ruleId":"287","severity":1,"message":"288","line":75,"column":5,"nodeType":"289","messageId":"254","endLine":85,"endColumn":6},{"ruleId":"251","severity":1,"message":"252","line":92,"column":17,"nodeType":"253","messageId":"254","endLine":92,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":105,"column":40,"nodeType":"246","endLine":105,"endColumn":43},{"ruleId":"251","severity":1,"message":"252","line":166,"column":70,"nodeType":"253","messageId":"254","endLine":166,"endColumn":72},{"ruleId":"251","severity":1,"message":"252","line":224,"column":70,"nodeType":"253","messageId":"254","endLine":224,"endColumn":72},{"ruleId":"251","severity":1,"message":"252","line":276,"column":70,"nodeType":"253","messageId":"254","endLine":276,"endColumn":72},{"ruleId":"251","severity":1,"message":"252","line":328,"column":70,"nodeType":"253","messageId":"254","endLine":328,"endColumn":72},{"ruleId":"235","severity":1,"message":"290","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":16},{"ruleId":"235","severity":1,"message":"250","line":15,"column":13,"nodeType":"237","messageId":"238","endLine":15,"endColumn":18},{"ruleId":"235","severity":1,"message":"291","line":55,"column":13,"nodeType":"237","messageId":"238","endLine":55,"endColumn":18},{"ruleId":"251","severity":1,"message":"252","line":173,"column":50,"nodeType":"253","messageId":"254","endLine":173,"endColumn":52},{"ruleId":"292","severity":1,"message":"293","line":283,"column":33,"nodeType":"246","endLine":283,"endColumn":44},{"ruleId":"244","severity":1,"message":"294","line":283,"column":33,"nodeType":"246","endLine":283,"endColumn":44},{"ruleId":"292","severity":1,"message":"293","line":285,"column":33,"nodeType":"246","endLine":285,"endColumn":44},{"ruleId":"244","severity":1,"message":"294","line":285,"column":33,"nodeType":"246","endLine":285,"endColumn":44},{"ruleId":"292","severity":1,"message":"293","line":287,"column":33,"nodeType":"246","endLine":287,"endColumn":44},{"ruleId":"244","severity":1,"message":"294","line":287,"column":33,"nodeType":"246","endLine":287,"endColumn":44},{"ruleId":"235","severity":1,"message":"267","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":16},{"ruleId":"235","severity":1,"message":"281","line":4,"column":14,"nodeType":"237","messageId":"238","endLine":4,"endColumn":18},{"ruleId":"235","severity":1,"message":"295","line":7,"column":10,"nodeType":"237","messageId":"238","endLine":7,"endColumn":39},{"ruleId":"240","severity":1,"message":"241","line":79,"column":9,"nodeType":"242","messageId":"243","endLine":130,"endColumn":10},{"ruleId":"235","severity":1,"message":"282","line":81,"column":17,"nodeType":"237","messageId":"238","endLine":81,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":83,"column":21,"nodeType":"242","messageId":"243","endLine":97,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":87,"column":54,"nodeType":"253","messageId":"254","endLine":87,"endColumn":56},{"ruleId":"251","severity":1,"message":"252","line":106,"column":37,"nodeType":"253","messageId":"254","endLine":106,"endColumn":39},{"ruleId":"296","severity":1,"message":"297","line":122,"column":81,"nodeType":"298","messageId":"299","endLine":122,"endColumn":83},{"ruleId":"251","severity":1,"message":"252","line":122,"column":107,"nodeType":"253","messageId":"254","endLine":122,"endColumn":109},{"ruleId":"296","severity":1,"message":"297","line":122,"column":113,"nodeType":"298","messageId":"299","endLine":122,"endColumn":115},{"ruleId":"251","severity":1,"message":"252","line":122,"column":139,"nodeType":"253","messageId":"254","endLine":122,"endColumn":141},{"ruleId":"300","severity":1,"message":"301","line":252,"column":51,"nodeType":"302","endLine":252,"endColumn":63},{"ruleId":"303","severity":1,"message":"304","line":1,"column":1,"nodeType":"305","messageId":"254","fix":"306"},{"ruleId":"235","severity":1,"message":"266","line":3,"column":20,"nodeType":"237","messageId":"238","endLine":3,"endColumn":25},{"ruleId":"235","severity":1,"message":"267","line":3,"column":27,"nodeType":"237","messageId":"238","endLine":3,"endColumn":33},{"ruleId":"235","severity":1,"message":"268","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":23},{"ruleId":"235","severity":1,"message":"269","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":17},{"ruleId":"235","severity":1,"message":"270","line":19,"column":7,"nodeType":"237","messageId":"238","endLine":19,"endColumn":13},{"ruleId":"235","severity":1,"message":"271","line":35,"column":7,"nodeType":"237","messageId":"238","endLine":35,"endColumn":19},{"ruleId":"235","severity":1,"message":"272","line":59,"column":7,"nodeType":"237","messageId":"238","endLine":59,"endColumn":10},{"ruleId":"235","severity":1,"message":"273","line":100,"column":7,"nodeType":"237","messageId":"238","endLine":100,"endColumn":14},{"ruleId":"235","severity":1,"message":"274","line":181,"column":11,"nodeType":"237","messageId":"238","endLine":181,"endColumn":20},{"ruleId":"235","severity":1,"message":"275","line":182,"column":11,"nodeType":"237","messageId":"238","endLine":182,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":193,"column":19,"nodeType":"253","messageId":"254","endLine":193,"endColumn":21},{"ruleId":"251","severity":1,"message":"252","line":193,"column":36,"nodeType":"253","messageId":"254","endLine":193,"endColumn":38},{"ruleId":"251","severity":1,"message":"252","line":228,"column":19,"nodeType":"253","messageId":"254","endLine":228,"endColumn":21},{"ruleId":"235","severity":1,"message":"267","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":16},{"ruleId":"235","severity":1,"message":"281","line":6,"column":14,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":63,"column":9,"nodeType":"242","messageId":"243","endLine":109,"endColumn":10},{"ruleId":"235","severity":1,"message":"282","line":65,"column":17,"nodeType":"237","messageId":"238","endLine":65,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":67,"column":21,"nodeType":"242","messageId":"243","endLine":81,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":71,"column":54,"nodeType":"253","messageId":"254","endLine":71,"endColumn":56},{"ruleId":"251","severity":1,"message":"252","line":90,"column":37,"nodeType":"253","messageId":"254","endLine":90,"endColumn":39},{"ruleId":"235","severity":1,"message":"283","line":184,"column":13,"nodeType":"237","messageId":"238","endLine":184,"endColumn":18},"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'ContactsOutlined' is defined but never used.","'CanvasJS' is assigned a value but never used.","'exist' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-native-reassign",["307"],"no-negated-in-lhs",["308"],"'user' is assigned a value but never used.","'clearInputs' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'NoSsr' is defined but never used.","'Select' is defined but never used.","'useAutocomplete' is defined but never used.","'CheckIcon' is defined but never used.","'styles' is assigned a value but never used.","'InputWrapper' is assigned a value but never used.","'Tag' is assigned a value but never used.","'Listbox' is assigned a value but never used.","'writer_id' is assigned a value but never used.","'writer_name' is assigned a value but never used.","'tagContent' is assigned a value but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'SentimentSatisfied' is defined but never used.","'like' is assigned a value but never used.","'auth' is defined but never used.","'review' is assigned a value but never used.","'board' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","no-dupe-class-members","Duplicate name 'printStar'.","MethodDefinition","'firebase' is defined but never used.","'title' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ControlPointDuplicateOutlined' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"309","text":"310"},"no-global-assign","no-unsafe-negation",[-1,0],""]
[{"/home/songjh/Project/PReview/src/index.js":"1","/home/songjh/Project/PReview/src/reportWebVitals.js":"2","/home/songjh/Project/PReview/src/App.js":"3","/home/songjh/Project/PReview/src/Login.js":"4","/home/songjh/Project/PReview/src/Community_view_write.js":"5","/home/songjh/Project/PReview/src/Camp_review_detail.js":"6","/home/songjh/Project/PReview/src/Mypage.js":"7","/home/songjh/Project/PReview/src/Main.js":"8","/home/songjh/Project/PReview/src/Community_view_detail.js":"9","/home/songjh/Project/PReview/src/Camp_review_main.js":"10","/home/songjh/Project/PReview/src/Community_view_main.js":"11","/home/songjh/Project/PReview/src/Solution_main.js":"12","/home/songjh/Project/PReview/src/Lecture_review_main.js":"13","/home/songjh/Project/PReview/src/Lecture_review_detail.js":"14","/home/songjh/Project/PReview/src/Lecture_review_write.js":"15","/home/songjh/Project/PReview/src/Camp_review_write.js":"16","/home/songjh/Project/PReview/src/firebase.js":"17","/home/songjh/Project/PReview/src/canvasjs.react.js":"18","/home/songjh/Project/PReview/src/canvasjs.min.js":"19","/home/songjh/Project/PReview/src/Solution_detail.js":"20","/home/songjh/Project/PReview/src/Solution_write.js":"21"},{"size":494,"mtime":1607502729989,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1607502729989,"results":"24","hashOfConfig":"23"},{"size":9804,"mtime":1608117588842,"results":"25","hashOfConfig":"23"},{"size":5869,"mtime":1608036872610,"results":"26","hashOfConfig":"23"},{"size":9288,"mtime":1608099680726,"results":"27","hashOfConfig":"23"},{"size":10835,"mtime":1608117588842,"results":"28","hashOfConfig":"23"},{"size":18599,"mtime":1608117588846,"results":"29","hashOfConfig":"23"},{"size":13933,"mtime":1608121299126,"results":"30","hashOfConfig":"23"},{"size":10817,"mtime":1608117588842,"results":"31","hashOfConfig":"23"},{"size":10236,"mtime":1608109821287,"results":"32","hashOfConfig":"23"},{"size":5513,"mtime":1608107475949,"results":"33","hashOfConfig":"23"},{"size":5547,"mtime":1608107938133,"results":"34","hashOfConfig":"23"},{"size":8686,"mtime":1608107611788,"results":"35","hashOfConfig":"23"},{"size":15012,"mtime":1608117588842,"results":"36","hashOfConfig":"23"},{"size":16945,"mtime":1608097596983,"results":"37","hashOfConfig":"23"},{"size":9480,"mtime":1608099680722,"results":"38","hashOfConfig":"23"},{"size":689,"mtime":1607502729989,"results":"39","hashOfConfig":"23"},{"size":2080,"mtime":1598298782000,"results":"40","hashOfConfig":"23"},{"size":479376,"mtime":1607575701000,"results":"41","hashOfConfig":"23"},{"size":10405,"mtime":1608117588846,"results":"42","hashOfConfig":"23"},{"size":8817,"mtime":1608099680726,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1s8ee8w",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/songjh/Project/PReview/src/index.js",[],["95","96"],"/home/songjh/Project/PReview/src/reportWebVitals.js",[],"/home/songjh/Project/PReview/src/App.js",["97","98","99","100"],"/home/songjh/Project/PReview/src/Login.js",["101","102","103","104","105","106","107"],"import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { Grid, Paper, Button } from '@material-ui/core';\nimport { db } from './firebase';\n\nconst Login = () => {\n  const [user, setUser] = React.useState(\"\");\n  const [name, setName] = React.useState(\"\");\n  const [nickname, setNickname] = React.useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n\n    db.collection(\"users\").doc(0 + \"\").set({\n      name: name,\n      nickname: nickname\n    }, { merge: true })\n      .then(() => {\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n\n        firebase.auth().currentUser.providerData.forEach(function (profile) {\n          if (profile.displayName != null) {\n            db.collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n              name: profile.displayName,\n              nickname: profile.displayName\n            }, { merge: true })\n              .then(() => {\n              })\n              .catch((error) => {\n                alert(error.message);\n              });\n          }\n          else if (profile.providerId == \"github.com\") {\n            db.collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n              name: firebase.auth().currentUser.uid,\n              nickname: firebase.auth().currentUser.uid\n            }, { merge: true })\n              .then(() => {\n              })\n              .catch((error) => {\n                alert(error.message);\n              });\n          }\n          else {\n            var docRef = db.collection(\"users\").doc(0+\"\");\n\n            docRef.get().then(function (doc) {\n              db.collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n                name: doc.data().name,\n                nickname: doc.data().nickname\n              }, { merge: true })\n                .then(() => {\n                })\n                .catch((error) => {\n                  alert(error.message);\n                });\n\n            }).catch(function (error) {\n              console.log(\"Error getting document:\", error);\n            });\n\n            \n          }\n\n        });\n      }\n\n      setName(\"\");\n      setNickname(\"\");\n    })\n  };\n\n  useEffect(() => { authListener(); }, []);\n\n  const keyHandleLogin = (e) => {\n    if (e.key == 'Enter') {\n      handleLogin();\n    }\n  }\n\n  const keyHandleSignUp = (e) => {\n    if (e.key == 'Enter') {\n      handleSignUp();\n    }\n  }\n\n  // ui config\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  }\n\n  // 렌더링\n\n  return (\n    <div className=\"Login\">\n      <Grid container justify=\"center\" wrap=\"wrap\">\n        <Paper className='Paper'>\n          <label>사용자 이메일</label>\n          <input type=\"text\" autoFocus required value={email} onChange={(e) => setEmail(e.target.value)} />\n          <p className=\"errorMsg\">{emailError}</p>\n          <label>비밀번호</label>\n          <input type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n          <p className=\"errorMsg\">{passwordError}</p>\n          <div className=\"btnContainer\" onKeyPress={keyHandleSignUp}>\n            {hasAccount ? (\n              <>\n                <button onClick={handleLogin} onKeyPress={keyHandleLogin}>로그인</button>\n                <p>계정이 없으면 <Button onClick={() => setHasAccount(!hasAccount)}>회원가입</Button></p>\n              </>\n            ) : (\n                <>\n                  <label>이름</label>\n                  <input type=\"text\" required value={name} onChange={(e) => setName(e.target.value)} />\n                  <label>닉네임</label>\n                  <input type=\"text\" required value={nickname} onChange={(e) => setNickname(e.target.value)} />\n                  <button onClick={handleSignUp}>회원가입</button>\n                  <p>계정이 있으면 <Button onClick={() => setHasAccount(!hasAccount)}>로그인</Button></p>\n                </>\n              )}\n          </div>\n\n          <hr></hr>\n          회원가입\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </Paper>\n      </Grid>\n    </div>\n  );\n}\n\n\nexport default Login;","/home/songjh/Project/PReview/src/Community_view_write.js",[],"/home/songjh/Project/PReview/src/Camp_review_detail.js",["108","109","110","111","112","113","114","115"],"import React, { Component } from 'react';\r\nimport firebase from './firebase';\r\nimport { Select, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport './total.css';\r\nimport { db, auth } from './firebase';\r\n\r\nclass Camp_review_detail extends Component {\r\n    // Paper 태그 스타일\r\n    styles = ({ spacing: { unit } }) => ({\r\n        paper: {\r\n            margin: `${unit * 3}px auto`,\r\n            padding: unit * 2,\r\n            maxWidth: 400\r\n        }\r\n    })\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            isUid: false,\r\n            items: [],\r\n            content: \"\",\r\n            commentWriter_id: \"\",\r\n            posting_id: \"\",\r\n            date: new Date(),\r\n            commentName: \"\",\r\n            uid: \"\"\r\n        };\r\n    }\r\n\r\n    likeUpdate() {\r\n        let params = this.getUrlParams();\r\n        let edit = this.state.items.like;\r\n        console.log(edit);\r\n\r\n        db.collection(\"postings\").doc(params.id).update({\r\n            'like': edit + 1\r\n        }).then(() => {\r\n            window.location.reload(false);\r\n        })\r\n    }\r\n\r\n    getUrlParams() {\r\n        var params = {};\r\n        window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (str, key, value) { params[key] = value; });\r\n        return params;\r\n    }\r\n\r\n    componentWillMount() {\r\n        let params = this.getUrlParams();\r\n        let review = db.collection(\"postings\").doc(params.id);\r\n        this.setState({ posting_id: review.id });\r\n\r\n        review.get().then(res => {\r\n            this.setState({ items: res.data() });\r\n        });\r\n    }\r\n    // 렌더링 후 완료\r\n    componentDidMount = () => {\r\n        {\r\n            let params = this.getUrlParams();\r\n            let review = db.collection(\"postings\").doc(params.id).get().then(doc => {\r\n                firebase.auth().onAuthStateChanged(function (user) {\r\n                    {\r\n                        if (user) {\r\n                            this.setState({ uid: firebase.auth().currentUser.uid });\r\n\r\n                            if (doc.data().writer_id == this.state.uid) {\r\n                                this.setState({ isUid: true });\r\n                            }\r\n                            else {\r\n                                this.setState({ isUid: false });\r\n                            }\r\n                        }\r\n                        else {\r\n                            alert(\"로그인을 먼저 해주세요\");\r\n                        }\r\n                    }\r\n                }.bind(this)).bind(this);\r\n            });\r\n\r\n            db.collection(\"comments\")\r\n                .orderBy(\"date\", \"desc\")\r\n                .onSnapshot(snaps => {\r\n                    snaps.forEach(doc => {\r\n                        let posting = doc.data().posting_id;\r\n                        if (posting == this.state.posting_id) {\r\n                            const commentDiv = document.createElement(\"div\");\r\n\r\n                            let htmlContent;\r\n\r\n                            db.collection(\"users\").doc(doc.data().commentWriter_id).get()\r\n                                .then(ret => {\r\n                                    console.log(doc.data().commentWriter_id);\r\n                                    this.setState({ commentName: ret.data().nickname });\r\n                                    //console.log(ret.data().nickname);\r\n                                    htmlContent = this.MakeHTMLContent(ret.data().nickname, doc.data().content, doc.data().date);\r\n\r\n                                    commentDiv.innerHTML = htmlContent;\r\n                                    if (this.myRef != null) {\r\n                                        this.myRef.appendChild(commentDiv);\r\n                                    }\r\n                                })\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    MakeHTMLContent(name, content, date) {\r\n        let htmlContent =\r\n            \"<div class=\\\"review\\\">\\\r\n            <ul>\\\r\n                <li class=\\\"item\\\">\\\r\n                    <div class=\\\"comment_nickname\\\">\"+ name + \"</div>\\\r\n                    <div class=\\\"comment_content\\\">\"+ content + \"</div>\\\r\n                    <div class=\\\"comment_date\\\">\"+ date + \"</div>\\\r\n                </li>\\\r\n            </ul>\\\r\n        </div>\";\r\n\r\n        return htmlContent\r\n    }\r\n\r\n    // 데이터 저장\r\n    handleSubmitComment = (e) => {\r\n        e.preventDefault();\r\n\r\n        // 빈칸 방지\r\n        if (this.state.content == null) {\r\n            return;\r\n        }\r\n        else {\r\n            if (firebase.auth().currentUser) {\r\n                db.collection(\"comments\").add({\r\n                    commentWriter_id: firebase.auth().currentUser.uid,\r\n                    content: this.state.content,\r\n                    posting_id: this.state.posting_id,\r\n                    date: this.state.date.toLocaleString()\r\n                })\r\n                    .then(() => {\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(error.message);\r\n                    });\r\n\r\n                this.setState({ content: \"\" });\r\n            }\r\n            else {\r\n                alert(\"로그인을 먼저 해주세요\");\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteReview = () => {\r\n        {\r\n            let params = this.getUrlParams();\r\n            let review = db.collection(\"postings\").doc(params.id);\r\n\r\n            db.collection(\"postings\").doc(review.id).delete()\r\n                .then(() => {\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n\r\n\r\n        };\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n    render() {\r\n        let item = this.state.items;\r\n\r\n        let params = this.getUrlParams();\r\n        let board = decodeURI(params.board);\r\n\r\n        // 렌더링\r\n        return (\r\n            <div className=\"Camp_review_detail\" class=\"main_body\">\r\n                <div className=\"sidebar\">\r\n                    <aside class=\"sidebar\">\r\n                        <ul class=\"category_camp\">\r\n                            <li><a href=\"/Camp_review_main?board=알고리즘\">알고리즘</a></li>\r\n                            <li><a href=\"/Camp_review_main?board=웹프로그래밍\">웹프로그래밍</a></li>\r\n                            <li><a href=\"/Camp_review_main?board=데이터 분석\">데이터분석</a></li>\r\n                            <li><a href=\"/Camp_review_main?board=AI\">AI</a></li>\r\n                        </ul>\r\n                    </aside>\r\n                </div>\r\n                <article class=\"article\">\r\n                    <Paper classname=\"paper\" elevation={3}>\r\n                        <div id=\"review_header\">\r\n                            <div id=\"review_title\">{item.title}</div>\r\n                            <div id=\"writer_info\">\r\n                                <span id=\"writer\">{item.writer_name}</span>\r\n                                <span id=\"date\">{item.date}</span>\r\n                            </div>\r\n                        </div>\r\n                        <hr id=\"line\" />\r\n                        <div id=\"review_content\">\r\n                            {item.content}\r\n                        </div>\r\n\r\n                        <div>\r\n                            {this.state.isUid ? (\r\n                                <>\r\n                                    <section id=\"submit-button\">\r\n                                        <Button variant=\"outlined\" onClick={this.handleClickOpen}>삭제</Button>\r\n                                        <Dialog\r\n                                            open={this.state.open}\r\n                                            onClose={this.handleClose}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            <DialogTitle id=\"alert-dialog-title\">{\"리뷰 삭제\"}</DialogTitle>\r\n                                            <DialogContent>\r\n                                                <DialogContentText id=\"alert-dialog-description\">\r\n                                                    리뷰를 삭제하시겠습니까?\r\n                                                    </DialogContentText>\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                                <Button onClick={this.handleClose} color=\"primary\">취소</Button>\r\n                                                <Link to={'/lecture_review_main?board=' + item.board}><Button type=\"submit\" onClick={this.deleteReview} color=\"primary\" autoFocus>확인</Button></Link>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                    </section>\r\n                                </>) : (\r\n                                    <>\r\n                                    </>)}\r\n                        </div>\r\n\r\n                        <hr id=\"line\" />\r\n\r\n                        <div class=\"comment_header\">\r\n                            <div class=\"comment_title\">댓글</div>\r\n                            <div>\r\n                                <button class=\"like\" onClick={() => { this.likeUpdate() }}><i class=\"far fa-heart\">♥</i></button>\r\n                                <span class=\"likepeople\">{item.like}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"comment_content\">\r\n                            <div id=\"comment\">\r\n                                <form className=\"form\" onSubmit={this.handleSubmitComment}>\r\n                                    <input id=\"input\" type=\"text\" value={this.state.content} onChange={(e) => this.setState({ content: e.target.value })}></input>\r\n                                    <Button variant=\"contained\" type=\"submit\" onClick={this.handleSubmitComment}>댓글 작성</Button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div class=\"item\" ref={(DOMNodeRef) => {\r\n                                this.myRef = DOMNodeRef;\r\n                            }}></div>\r\n                        </div>\r\n                    </Paper>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Camp_review_detail;\r\n","/home/songjh/Project/PReview/src/Mypage.js",["116","117","118","119","120","121","122","123","124","125","126"],"import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { Link } from 'react-router-dom';\nimport { Select, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport { db } from './firebase.js';\nimport './total.css';\n\nclass Mypage extends Component {\n    Constructor() {\n        this.myRef = React.createRef();\n\n        this.state = {\n            open : false,\n            uid: \"\"\n        };\n    }\n\n\n    // 렌더링 후 완료\n    componentDidMount = () => {\n\n            firebase.auth().onAuthStateChanged(function (user) {\n                {\n                    this.setState({ uid: firebase.auth().currentUser.uid });\n                }\n            }.bind(this)).bind(this);\n\n        \n            db.collection(\"reviews\")\n            .orderBy(\"date\",\"desc\")\n            .onSnapshot(snaps => {\n                snaps.forEach(doc => {\n                        const reviewDiv = document.createElement(\"div\");\n                        let htmlContent;\n\n                        if(this.state.uid==doc.data().writer_id)\n                        {\n                            htmlContent =\n                            \"<div class=\\\"review\\\">\\\n                                <ul>\\\n                                    <li class=\\\"item\\\">\\\n                                        <a href=\\\"#\\\"><img src=\\\"image.jpg\\\" alt=\\\"\\\" width=\\\"100\\\"></img></a>\\\n                                        <div class=\\\"info\\\">\\\n                                        <a href='/Lecture_review_detail?board=\"+doc.data().board+\"&id=\"+doc.id+\"'><div class=\\\"title\\\">\"+ doc.data().lecture_name + \"</div></a>\\\n                                            <div class=\\\"rank\\\">\"+ this.printStar(doc.data().star) + \"</div>\\\n                                            <div class=\\\"tag\\\">\"+ doc.data().tags + \"</div>\\\n                                            <Button onClick=\\\"location.href='/Lecture_review_main?search=\"+doc.data().lecture_name+\"'\\\" variant=\\\"outlined\\\" color=\\\"primary\\\" type=\\\"submit\\\">이 강의만 모아보기</Button>\\\n                                        </div>\\\n                                        <div class=\\\"like\\\">\\\n                                            <span class=\\\"date\\\">\"+ doc.data().date + \"</span>\\\n                                            <div class=\\\"likebtn\\\">\\\n                                                <i class=\\\"fas fa-heart\\\">♥</i>\\\n                                            <div class=\\\"likepeople\\\">\"+ doc.data().like + \"</div>\\\n                                            </div>\\\n                                        <span class=\\\"writer\\\">작성자 : \"+ doc.data().writer_name + \"</span>\\\n                                        </div>\\\n                                    </li>\\\n                                </ul>\\\n                            </div>\";\n\n                        reviewDiv.innerHTML = htmlContent;\n                        if(this.myRef!=null)\n                        {\n                            this.myRef.appendChild(reviewDiv);\n                        }\n                        }\n                 \n            })\n        })\n    }\n   \n    printStar(star) {\n        let ret = \"\";\n\n        for (let i = 0; i < 5; i++) {\n            if (i < star) ret += \"★\";\n            else ret += \"☆\";\n        }\n\n        return ret;\n    }\n\n\n    deleteUser = () => {\n        {\n            var user = firebase.auth().currentUser;\n\n            user.delete().then(function() {\n                // User deleted.\n              }).catch(function(error) {\n                alert(error.message);\n              });\n            \n            \n            db.collection(\"users\").doc(user).delete()\n                .then(() => {\n                })\n                .catch((error) => {\n                    alert(error.message);\n                });\n        };\n    }\n\n    \n    handleClickOpen = () => {\n        this.setState({open : true});\n    }\n\n    handleClose = () => {\n        this.setState({open : false});\n    }\n\n    printStar(star) {\n        let ret = \"\";\n\n        for (let i = 0; i < 5; i++) {\n            if (i < star) ret += \"★\";\n            else ret += \"☆\";\n        }\n\n        return ret;\n\n    }\n\n    // 렌더링\n    render() {\n        \n        return (\n            <div className=\"Lecture_review_main\" class=\"main_body\">\n                <div className=\"sidebar\">\n                    <aside class=\"sidebar\">\n                        <div class=\"p\"><a href=\"/Mypage\">내가 작성한 글</a></div>\n                        <div class=\"p\"><a>계정 정보</a></div>\n                        <ul class=\"category\">\n\n                            <li><a href=\"/Lecture_review_main?board=Algorithm\">개인 정보 수정</a></li>\n                            <li onClick={this.handleClickOpen}>회원탈퇴</li>\n                                        <>\n                                            <section id=\"submit-button\">\n                                                <Dialog\n                                                    open={false}\n                                                    onClose={this.handleClose}\n                                                    aria-labelledby=\"alert-dialog-title\"\n                                                    aria-describedby=\"alert-dialog-description\"\n                                                >\n                                                    <DialogTitle id=\"alert-dialog-title\">{\"탈퇴\"}</DialogTitle>\n                                                    <DialogContent>\n                                                        <DialogContentText id=\"alert-dialog-description\">\n                                                            탈퇴하시겠습니까?\n                                                    </DialogContentText>\n                                                    </DialogContent>\n                                                    <DialogActions>\n                                                        <Button onClick={this.handleClose} color=\"primary\">취소</Button>\n                                                        <Link to={'/Main'}><Button type=\"submit\" onClick={this.deleteUser} color=\"primary\" autoFocus>확인</Button></Link>\n                                                    </DialogActions>\n                                                </Dialog>\n                                        </section>\n                                        </>\n                        </ul>\n                    </aside>\n                </div>\n\n                <article class=\"article\">\n                <Paper classname=\"paper\" elevation={2}>\n                    <div class=\"review_search\">\n                        <div class=\"mypage_category\">\n                            <span>내가 작성한 글</span>\n                        </div>\n                    </div>\n                    <div class=\"review_search_small\">\n                        <div class=\"mypage_category_small\">\n                            <span>강의 리뷰</span>\n                        </div>\n                    </div>\n                    <div class=\"header\">\n                        <span>링크</span>\n                        <span>내용</span>\n                        <div class=\"btn\">\n                            <button>작성날짜△</button>\n                            <button>좋아요</button>\n                        </div>\n\n                    </div>\n                    <div id=\"reviews\">\n                        {db.collection(\"reviews\")\n                        .onSnapshot((snaps) => {\n                            document.getElementById(\"reviews\").innerHTML = \"\";\n                            snaps.forEach((doc) => {\n                                console.log(firebase.auth().currentUser.uid);\n                                console.log(doc.data().writer_id)\n                                if(doc.data().writer_id == firebase.auth().currentUser.uid){\n\n                                    const reviewDiv = document.createElement(\"div\");\n\n                                    const htmlContent =\n                                    \"<div class=\\\"review\\\">\\\n                                        <ul>\\\n                                            <li class=\\\"item\\\">\\\n                                                <div id='site_box'>\\\n                                                    <a href=\\\"https://www.acmicpc.net/\\\">백준</a>\\\n                                                </div>\\\n                                                <div class=\\\"info\\\">\\\n                                                    <a href='/Lecture_review_detail?baord=\"+doc.data().board+\"&id=\"+doc.id+\"'><div class=\\\"title\\\">\"+ doc.data().lecture_name + \"</div></a>\\\n                                                    <div class=\\\"rank\\\">\"+ this.printStar(doc.data().star) + \"</div>\\\n                                                    <div class=\\\"tag\\\">\"+ doc.data().tags + \"</div>\\\n                                                    <Button onClick=\\\"location.href='/Lecture_review_main?search=\"+doc.data().lecture_name+\"'\\\" variant=\\\"outlined\\\" color=\\\"primary\\\" type=\\\"submit\\\">이 강의만 모아보기</Button>\\\n                                                </div>\\\n                                                <div class=\\\"like\\\">\\\n                                                    <span class=\\\"date\\\">\"+ doc.data().date + \"</span>\\\n                                                    <div class=\\\"likebtn\\\">\\\n                                                        <i class=\\\"fas fa-heart\\\">♥</i>\\\n                                                        <div class=\\\"likepeople\\\">\"+ doc.data().like + \"</div>\\\n                                                    </div>\\\n                                                    <span class=\\\"writer\\\">작성자 : \"+ doc.data().writer_name + \"</span>\\\n                                                </div>\\\n                                            </li>\\\n                                        </ul>\\\n                                    </div>\";\n\n                                    reviewDiv.innerHTML = htmlContent;\n\n                                    document.getElementById(\"reviews\").appendChild(reviewDiv);\n                                }\n                            })\n                        })}\n                    </div>\n\n                    <div class=\"review_search_small\">\n                        <div class=\"mypage_category_small\">\n                            <span>다른 게시판</span>\n                        </div>\n                    </div>\n                    <div class=\"header\">\n                        <span>제목</span>\n                        <div class=\"btn\">\n                            <button>작성날짜△</button>\n                            <button>조회수△</button>\n                            <button>좋아요</button>\n                        </div>\n                    </div>\n                    <div id=\"postings\">\n                        {db.collection(\"postings\")\n                        .onSnapshot((snaps) => {\n                            document.getElementById(\"postings\").innerHTML = \"\";\n                            snaps.forEach((doc) => {\n                                console.log(firebase.auth().currentUser.uid);\n                                console.log(doc.data().writer_id)\n                                if(doc.data().writer_id == firebase.auth().currentUser.uid){\n\n                                    const postingDiv = document.createElement(\"div\");\n\n                                    const htmlContent =\n                                    \"<div class=\\\"review\\\">\\\n                                        <ul>\\\n                                            <li class=\\\"item\\\">\\\n                                                <a href=\\\"#\\\"><img src=\\\"image.jpg\\\" alt=\\\"\\\" width=\\\"100\\\"></img></a>\\\n                                                <div class=\\\"info\\\">\\\n                                                <a href='/Camp_review_detail?board=\"+doc.data().board+\"&id=\"+doc.id+\"'><div class=\\\"title\\\">\"+doc.data().title+\"</div></a>\\\n                                                </div>\\\n                                                <div class=\\\"like\\\">\\\n                                                    <span class=\\\"date\\\">\"+doc.data().date+\"</span>\\\n                                                    <div class=\\\"likebtn\\\">\\\n                                                        <i class=\\\"fas fa-heart\\\">♥</i>\\\n                                                    <div class=\\\"likepeople\\\">\"+doc.data().like+\"</div>\\\n                                                    </div>\\\n                                                <span class=\\\"writer\\\">작성자 : \"+doc.data().writer_id+\"</span>\\\n                                                </div>\\\n                                            </li>\\\n                                        </ul>\\\n                                    </div>\";\n                                    postingDiv.innerHTML = htmlContent;\n\n                                    document.getElementById(\"postings\").appendChild(postingDiv);\n                                }\n                            })\n                        })}\n                    </div>\n                    </Paper>\n                </article>\n            </div>\n        )\n    };\n\n}\n\nexport default Mypage;\n","/home/songjh/Project/PReview/src/Main.js",["127","128","129","130","131","132","133","134","135","136"],"/home/songjh/Project/PReview/src/Community_view_detail.js",[],"/home/songjh/Project/PReview/src/Camp_review_main.js",["137","138","139","140"],"/home/songjh/Project/PReview/src/Community_view_main.js",["141","142","143","144"],"/home/songjh/Project/PReview/src/Solution_main.js",["145","146","147","148"],"/home/songjh/Project/PReview/src/Lecture_review_main.js",["149","150","151","152","153","154","155","156"],"/home/songjh/Project/PReview/src/Lecture_review_detail.js",["157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React, { Component } from 'react';\nimport { Select, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport './total.css';\nimport { db, auth } from './firebase';\nimport firebase from 'firebase';\nimport { Link } from 'react-router-dom';\nimport { ControlPointDuplicateOutlined } from '@material-ui/icons';\n\nclass Lecture_review_detail extends Component {\n    // Paper 태그 스타일\n    styles = ({ spacing: { unit } }) => ({\n        paper: {\n            margin: `${unit * 3}px auto`,\n            padding: unit * 2,\n            maxWidth: 400\n        }\n    })\n\n    constructor(props) {\n        super(props);\n\n        this.myRef = React.createRef();\n\n        this.state = {\n            open: false,\n            isUid: false,\n            items: [],\n            content: \"\",\n            commentWriter_id: \"\",\n            posting_id: \"\",\n            date: new Date(),\n            commentName: \"\",\n            uid: \"\",\n            new_comment: \"\"\n        };\n    }\n\n    printStar(star) {\n        let ret = \"\";\n\n        for (let i = 0; i < 5; i++) {\n            if (i < star) ret += \"★\";\n            else ret += \"☆\";\n        }\n\n        return ret;\n    };\n\n    likeUpdate() {\n        let params = this.getUrlParams();\n        let edit = this.state.items.like;\n        console.log(edit);\n\n        db.collection(\"reviews\").doc(params.id).update({\n            'like': edit + 1\n        }).then(() => {\n            window.location.reload(false);\n        })\n    }\n\n    getUrlParams() {\n        var params = {};\n        window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (str, key, value) { params[key] = value; });\n        return params;\n    }\n\n    componentWillMount() {\n        let params = this.getUrlParams();\n        let review = db.collection(\"reviews\").doc(params.id);\n        this.setState({ posting_id: review.id });\n\n        review.get().then(res => {\n            this.setState({ items: res.data() });\n        });\n    }\n\n    // 렌더링 후 완료\n    componentDidMount = () => {\n        {\n            let params = this.getUrlParams();\n            let review = db.collection(\"reviews\").doc(params.id).get().then(doc => {\n                firebase.auth().onAuthStateChanged(function (user) {\n                    {\n                        if (user) {\n                            this.setState({ uid: firebase.auth().currentUser.uid });\n\n                            if (doc.data().writer_id == this.state.uid) {\n                                this.setState({ isUid: true });\n                            }\n                            else {\n                                this.setState({ isUid: false });\n                            }\n                        }\n                        else {\n                            alert(\"로그인을 먼저 해주세요\");\n                        }\n                    }\n                }.bind(this)).bind(this);\n            });\n\n            db.collection(\"comments\")\n                .orderBy(\"date\", \"desc\")\n                .onSnapshot(snaps => {\n                    snaps.forEach(doc => {\n                        let posting = doc.data().posting_id;\n                        if (posting == this.state.posting_id) {\n                            const commentDiv = document.createElement(\"div\");\n\n                            let htmlContent;\n\n                            db.collection(\"users\").doc(doc.data().commentWriter_id).get()\n                                .then(ret => {\n                                    this.setState({ commentName: ret.data().nickname });\n                                    //console.log(ret.data().nickname);\n                                    htmlContent = this.MakeHTMLContent(ret.data().nickname, doc.data().content, doc.data().date);\n\n                                    commentDiv.innerHTML = htmlContent;\n\n                                    console.log(this.state.new_comment);\n                                    console.log(doc.id);\n\n                                    if (this.myRef != null && this.state.new_comment == \"\" || this.state.new_comment == doc.id) {\n                                        this.myRef.appendChild(commentDiv);\n                                        console.log(\"add!\");\n                                    }\n                                })\n                        }\n                    })\n                })\n        }\n    }\n\n    MakeHTMLContent(name, content, date) {\n        let htmlContent =\n            \"<div class=\\\"review\\\">\\\n            <ul>\\\n                <li class=\\\"item\\\">\\\n                    <div class=\\\"comment_nickname\\\">\"+ name + \"</div>\\\n                    <div class=\\\"comment_content\\\">\"+ content + \"</div>\\\n                    <div class=\\\"comment_date\\\">\"+ date + \"</div>\\\n                </li>\\\n            </ul>\\\n        </div>\";\n\n        return htmlContent\n    }\n\n    // 데이터 저장\n    handleSubmitComment = (e) => {\n        e.preventDefault();\n\n        // 빈칸 방지\n        if (this.state.content == null) {\n            return;\n        }\n        else {\n            if (firebase.auth().currentUser) {\n                db.collection(\"comments\").add({\n                    commentWriter_id: firebase.auth().currentUser.uid,\n                    content: this.state.content,\n                    posting_id: this.state.posting_id,\n                    date: this.state.date.toLocaleString()\n                })\n                    .then(() => {\n                        window.location.reload(false);\n                    })\n                    .catch((error) => {\n                        alert(error.message);\n                    });\n\n                this.setState({ content: \"\" });\n            }\n            else {\n                alert(\"로그인을 먼저 해주세요\");\n            }\n\n        }\n\n    }\n\n    deleteReview = () => {\n        {\n            let params = this.getUrlParams();\n            let review = db.collection(\"reviews\").doc(params.id);\n\n            db.collection(\"reviews\").doc(review.id).delete()\n                .then(() => {\n                })\n                .catch((error) => {\n                    alert(error.message);\n                });\n\n\n        };\n    }\n\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    render() {\n        let item = this.state.items;\n\n        let params = this.getUrlParams();\n        let board = decodeURI(params.board);\n\n        // 렌더링\n        return (\n            <div className=\"Lecture_review_detail\" class=\"main_body\">\n                <div className=\"sidebar\">\n                    <aside class=\"sidebar\">\n                        <p>언어</p>\n                        <ul class=\"category\">\n                            <li><a href=\"/Lecture_review_main?board=C/C++\">C / C++</a></li>\n                            <li><a href=\"/Lecture_review_main?board=C#\">C#</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Java\">Java</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Python\">Python</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Javascript\">Javascript</a></li>\n                        </ul>\n                        <p>분야</p>\n                        <ul class=\"category\">\n                            <li><a href=\"/Lecture_review_main?board=Algorithm\">Algorithm</a></li>\n                            <li><a href=\"/Lecture_review_main?board=FrontEnd\">FrontEnd</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Server\">Server</a></li>\n                            <li><a href=\"/Lecture_review_main?board=Database\">Database</a></li>\n                            <li><a href=\"/Lecture_review_main?board=ML/DL\">ML/DL</a></li>\n                        </ul>\n                    </aside>\n                </div>\n                <article class=\"article\">\n                    <Paper classname=\"paper\" elevation={3}>\n                        <div id=\"detail\">\n                            <div class=\"category_name category_name_write_page\">{board}</div>\n                            <section id=\"lecture-name\" class=\"lecturename writing-block\">\n                                <div class=\"item\">\n                                    <div class=\"review_title\">\n                                        <span>{item.lecture_name}</span>\n                                    </div>\n\n                                    <div class=\"writer_info\">\n                                        <span class=\"writer\">{item.writer_name}</span><br></br>\n                                        <span class=\"date\">{item.date}</span>\n                                    </div>\n                                </div>\n                            </section>\n\n                            <section id=\"contants\" class=\"writing-block\">\n                                <div class=\"star\" class=\"item\">\n                                    <div class=\"review-entry\">\n                                        <span class=\"entry-name\">별점</span>\n                                    </div>\n                                    <div class=\"review-content\">\n                                        <span>{this.printStar(item.star)}</span>\n                                    </div>\n                                </div>\n                                <div id=\"hashtags\" class=\"item\">\n                                    <div class=\"review-entry\">\n                                        <span class=\"entry-name\">태그</span>\n                                    </div>\n                                    <div class=\"review-content\">\n                                        <span>{item.tags}</span>\n                                    </div>\n                                </div>\n                                <div id=\"lecture-info\" class=\"item\">\n                                    <div class=\"review-entry\">\n                                        <span class=\"entry-name\">수강 정보</span>\n                                    </div>\n                                    <div class=\"review-content\">\n                                        <span>수강 기간 : {item.period}</span>\n                                        <span> / 수강 비용 : 월 {item.cost}원</span>\n                                    </div>\n                                </div>\n                                <div id=\"pros\" class=\"item\">\n                                    <div class=\"review-entry\">\n                                        <span class=\"entry-name\">장점</span>\n                                    </div>\n                                    <div class=\"review-content-normal\">\n                                        <span>{item.pros}</span>\n                                    </div>\n                                </div>\n                                <div id=\"cons\" class=\"item\">\n                                    <div class=\"review-entry\">\n                                        <span class=\"entry-name\">단점</span>\n                                    </div>\n                                    <div class=\"review-content-normal\">\n                                        <span>{item.cons}</span>\n                                    </div>\n                                </div>\n                                <div>\n                                    {this.state.isUid ? (\n                                        <>\n                                            <section id=\"submit-button\">\n                                                <Button variant=\"outlined\" onClick={this.handleClickOpen}>삭제</Button>\n                                                <Dialog\n                                                    open={this.state.open}\n                                                    onClose={this.handleClose}\n                                                    aria-labelledby=\"alert-dialog-title\"\n                                                    aria-describedby=\"alert-dialog-description\"\n                                                >\n                                                    <DialogTitle id=\"alert-dialog-title\">{\"리뷰 삭제\"}</DialogTitle>\n                                                    <DialogContent>\n                                                        <DialogContentText id=\"alert-dialog-description\">\n                                                            리뷰를 삭제하시겠습니까?\n                                                    </DialogContentText>\n                                                    </DialogContent>\n                                                    <DialogActions>\n                                                        <Button onClick={this.handleClose} color=\"primary\">취소</Button>\n                                                        <Link to={'/lecture_review_main?board=' + item.board}><Button type=\"submit\" onClick={this.deleteReview} color=\"primary\" autoFocus>확인</Button></Link>\n                                                    </DialogActions>\n                                                </Dialog>\n                                            </section>\n                                        </>) : (\n                                            <>\n                                            </>)}\n                                </div>\n\n                                <button class=\"go\">강의 바로가기</button>\n                            </section>\n                            <div class=\"comment_header\">\n                                <div class=\"comment_title\">댓글</div>\n                                <div>\n                                    <button class=\"like\" onClick={() => { this.likeUpdate() }}><i class=\"far fa-heart\">♥</i></button>\n                                    <span class=\"likepeople\">{item.like}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"comment_content\">\n                                <div id=\"comment\">\n                                    <form className=\"form\" onSubmit={this.handleSubmitComment}>\n                                        <input id=\"input\" type=\"text\" value={this.state.content} onChange={(e) => this.setState({ content: e.target.value })}></input>\n                                        <Button variant=\"contained\" type=\"submit\" onClick={this.handleSubmitComment}>댓글 작성</Button>\n                                    </form>\n                                </div>\n\n                                <div id=\"comment_list\" class=\"item\" ref={(DOMNodeRef) => {\n                                    this.myRef = DOMNodeRef;\n                                }}></div>\n                            </div>\n                        </div>\n                    </Paper>\n                </article>\n            </div >\n        );\n    }\n}\n\nexport default Lecture_review_detail;\n","/home/songjh/Project/PReview/src/Lecture_review_write.js",["170","171","172","173","174","175","176","177","178","179","180"],"import React, { useState } from 'react';\nimport './total.css';\nimport { Snackbar, NoSsr, Select, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\nimport { db } from './firebase.js';\nimport firebase from 'firebase';\nimport { Link, Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SentimentSatisfied } from '@material-ui/icons';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n// Paper 태그 스타일\nconst styles = ({ spacing: { unit } }) => ({\n    paper: {\n        margin: `${unit * 3}px auto`,\n        padding: unit * 2,\n        maxWidth: 400\n    }\n})\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nconst InputWrapper = styled('div')`\n&:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    height: 30px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n    <div {...props}>\n        <span>{label}</span>\n        <CloseIcon id='x' onClick={onDelete} />\n    </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: #fafafa;\n  border: 1px solid #e8e8e8;\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  #x {\n      font-size:25px;\n  }\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled('ul')`\n  width: 300px;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\n// 오늘 날짜\nconst today = new Date();\n\n// 게시글 작성\nconst Lecture_review_write = () => {\n    // 알림창\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // 빈칸 방지\n    const classes = useStyles();\n    const [openBar, setOpenBar] = React.useState(false);\n\n    const handleClickBar = () => {\n        setOpenBar(true);\n    };\n\n    const handleCloseBar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpenBar(false);\n    };\n\n    let params = {};\n    window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (str, key, value) { params[key] = value; });\n\n    // 데이터 변수\n    const [writer_id, setWriterId] = useState(\"\");\n    const [writer_name, setWriterName] = useState(\"\");\n    const [lecture_name, setLectureName] = useState(\"\");\n    const [star, setStar] = useState(\"\");\n    const [tags, setTags] = useState([]);\n    const [period, setPeriod] = useState(\"\");\n    const [cost, setCost] = useState(\"\");\n    const [pros, setPros] = useState(\"\");\n    const [cons, setCons] = useState(\"\");\n    const [link, setLink] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [like, setLike] = useState(\"\");\n    const [board, setBoard] = useState(params.board);\n\n    // 데이터 저장\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        handleClose();\n\n        // 빈칸 방지\n        if ((lecture_name == \"\") || (star == null) || (tags == null) || (period == null) || (cost == null) || (pros == null) || (cons == null) || (link == null) || (date == null)) {\n            handleClickBar();\n        }\n        else {\n            db.collection(\"users\").doc(firebase.auth().currentUser.uid).get()\n                .then(doc => {\n\n                    db.collection(\"reviews\").add({\n                        writer_id: firebase.auth().currentUser.uid,\n                        writer_name: doc.data().nickname,\n                        lecture_name: lecture_name,\n                        star: star,\n                        tags: tags,\n                        period: period,\n                        cost: cost,\n                        pros: pros,\n                        cons: cons,\n                        link: link,\n                        date: today.toLocaleString(),\n                        like: 0,\n                        board: board\n                    })\n                        .then((docRef) => {\n                            window.location.href = \"/Lecture_review_detail?board=\" + params.board + \"&id=\" + docRef.id;\n                        })\n                        .catch((error) => {\n                            alert(error.message);\n                        });\n                });\n\n            setWriterId(\"\");\n            setLectureName(\"\");\n            setStar(\"\");\n            setTags(\"\");\n            setPeriod(\"\");\n            setCost(\"\");\n            setPros(\"\");\n            setCons(\"\");\n            setPeriod(\"\");\n            setCost(\"\");\n            setLink(\"\");\n            setDate(\"\");\n            setLike(\"\");\n            setBoard(\"\");\n            setWriterName(\"\");\n        }\n    };\n\n    // 태그 관련 변수\n    const {\n        getRootProps,\n        getInputProps,\n        getTagProps,\n        getListboxProps,\n        getOptionProps,\n        groupedOptions,\n        value,\n        focused,\n        setAnchorEl,\n    } = useAutocomplete({\n        id: 'customized-hook-demo',\n        multiple: true,\n        options: tagContent,\n        disableClearble: false,\n        getOptionLabel: (option) => option.title,\n        onChange: (e, value) => {\n            let i = 0;\n            let content = \"\";\n            for (i = 0; i < value.length; i++) {\n                content += value[i].title;\n\n            }\n            setTags(content);\n        }\n    });\n\n    // 엔터키\n    const keyHandleClickOpen = (e) => {\n        if (e.key == 'Enter') {\n            handleClickOpen();\n        }\n    }\n\n    // 렌더링\n    return (\n        <div className=\"Lecture_review_write\" class=\"main_body\">\n            <div className={classes.root}>\n                <Snackbar open={openBar} autoHideDuration={6000} onClose={handleCloseBar}>\n                    <Alert onClose={handleCloseBar} severity=\"error\">\n                        빈칸 없이 입력해주세요\n                    </Alert>\n                </Snackbar>\n            </div>\n            <div className=\"sidebarclass\">\n                <aside class=\"sidebar\">\n                    <p>언어</p>\n                    <ul class=\"category\">\n                        <li><a href=\"/Lecture_review_main?board=C/C++\">C/C++</a></li>\n                        <li><a href=\"/Lecture_review_main?board=C#\">C#</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Java\">Java</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Python\">Python</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Javascript\">Javascript</a></li>\n                    </ul>\n                    <p>분야</p>\n                    <ul class=\"category\">\n                        <li><a href=\"/Lecture_review_main?board=Algorithm\">Algorithm</a></li>\n                        <li><a href=\"/Lecture_review_main?board=FrontEnd\">FrontEnd</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Server\">Server</a></li>\n                        <li><a href=\"/Lecture_review_main?board=Database\">Database</a></li>\n                        <li><a href=\"/Lecture_review_main?board=ML/DL\">ML/DL</a></li>\n                    </ul>\n                </aside>\n            </div>\n            <article class=\"article\">\n                <Paper classname=\"paper\" elevation={3}>\n                    <div class=\"category_name category_name_write_page\">\n                        <span>{decodeURI(params.board)}</span>\n                    </div>\n                    <form className=\"form\" onSubmit={handleSubmit}>\n                        <section id=\"lecture-name\" class=\"writing-block\">\n                            <div class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span>강좌 이름 :</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <input type=\"text\" id=\"name\" class=\"short-text\" list=\"lecture-list\" value={lecture_name} onChange={(e) => setLectureName(e.target.value)}></input>\n                                    <datalist id=\"lecture-list\">\n                                        <option value=\"유튜브 클론코딩\"></option>\n                                        <option value=\"Amazing, awesome, incredible!\"></option>\n                                    </datalist>\n                                </div>\n                            </div>\n                        </section>\n\n                        <section id=\"contants\" class=\"writing-block\">\n                            <div id=\"star\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">별점</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <Select id=\"star-score\" value={star} onChange={(e) => setStar(e.target.value)}>\n                                        <option value=\"5\">★★★★★</option>\n                                        <option value=\"4\">★★★★☆</option>\n                                        <option value=\"3\">★★★☆☆</option>\n                                        <option value=\"2\">★★☆☆☆</option>\n                                        <option value=\"1\">★☆☆☆☆</option>\n                                    </Select>\n                                </div>\n                            </div>\n\n                            <div id=\"hashtags\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">태그</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <ul class=\"tags\">\n\n                                        <div>\n                                            <div {...getRootProps()}>\n                                                <InputWrapper id=\"tagstyle\" ref={setAnchorEl} className={focused ? 'focused' : ''}>\n                                                    {value.map((option, index) => (\n                                                        <Tag label={option.title} {...getTagProps({ index })} />\n                                                    ))}\n                                                    <input type=\"text\" id=\"tag\"{...getInputProps()}></input>\n                                                </InputWrapper>\n                                            </div>\n                                            {groupedOptions.length > 0 ? (\n                                                <Listbox {...getListboxProps()}>\n                                                    {groupedOptions.map((option, index) => (\n                                                        <li {...getOptionProps({ option, index })}>\n                                                            <span>{option.title}</span>\n                                                            <CheckIcon fontSize=\"small\" />\n                                                        </li>\n                                                    ))}\n                                                </Listbox>\n                                            ) : null}\n                                        </div>\n\n                                    </ul>\n                                </div>\n                            </div>\n\n                            <div id=\"lecture-info\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">수강 정보</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <span>수강 기간 : </span>\n                                    <input type=\"text\" id=\"period\" value={period} onChange={(e) => setPeriod(e.target.value)}></input>\n                                    <span> / 수강 비용 : </span>\n                                    <input type=\"text\" id=\"cost\" value={cost} onChange={(e) => setCost(e.target.value)}></input>\n                                </div>\n                            </div>\n\n                            <div id=\"pros\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">장점</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <input type=\"text\" id=\"pros\" class=\"long-text\" value={pros} onChange={(e) => setPros(e.target.value)}></input>\n                                </div>\n                            </div>\n\n                            <div id=\"cons\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">단점</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <input type=\"text\" id=\"cons\" class=\"long-text\" value={cons} onChange={(e) => setCons(e.target.value)} />\n                                </div>\n                            </div>\n\n                            <div id=\"link\" class=\"item\">\n                                <div class=\"review-entry\">\n                                    <span class=\"entry-name\">강의 링크</span>\n                                </div>\n                                <div class=\"review-content\">\n                                    <input type=\"text\" id=\"link\" class=\"short-text\" value={link} onChange={(e) => setLink(e.target.value)}></input>\n                                </div>\n                            </div>\n                        </section>\n\n                        <section id=\"submit-button\">\n                            <Button variant=\"contained\" onClick={handleClickOpen} onKeyPress={keyHandleClickOpen}>글 작성</Button>\n                            <Dialog\n                                open={open}\n                                onClose={handleClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                                <DialogTitle id=\"alert-dialog-title\">{\"리뷰 작성\"}</DialogTitle>\n                                <DialogContent>\n                                    <DialogContentText id=\"alert-dialog-description\">\n                                        리뷰를 저장하시겠습니까?\n                                        </DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={handleClose} color=\"primary\">취소</Button>\n                                    <Button type=\"submit\" onClick={handleSubmit} color=\"primary\" autoFocus>확인</Button>\n                                </DialogActions>\n                            </Dialog>\n                        </section>\n                    </form>\n                </Paper>\n            </article>\n        </div>\n    );\n}\n\n\n// 태그 종류\nconst tagContent = [\n    { title: '#쉬워요 ' },\n    { title: '#적당해요 ' },\n    { title: '#어려워요 ' },\n    { title: '#효과적이에요 ' },\n    { title: '#전체_구조를_보여줘요 ' },\n    { title: '#실무적이에요' }\n];\n\nexport default Lecture_review_write;\n","/home/songjh/Project/PReview/src/Camp_review_write.js",["181","182","183","184","185","186","187","188","189","190","191","192","193"],"import React, { useState } from 'react';\r\nimport './total.css';\r\nimport { Snackbar, NoSsr, Select, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport styled from 'styled-components';\r\nimport { db } from './firebase.js';\r\nimport firebase from 'firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n// Paper 태그 스타일\r\nconst styles = ({ spacing: { unit } }) => ({\r\n    paper: {\r\n        margin: `${unit * 3}px auto`,\r\n        padding: unit * 2,\r\n        maxWidth: 400\r\n    }\r\n})\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst InputWrapper = styled('div')`\r\n&:hover {\r\n    border-color: #40a9ff;\r\n  }\r\n\r\n  &.focused {\r\n    border-color: #40a9ff;\r\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\r\n  }\r\n\r\n  & input {\r\n    font-size: 14px;\r\n    height: 30px;\r\n    box-sizing: border-box;\r\n    padding: 4px 6px;\r\n    width: 0;\r\n    min-width: 30px;\r\n    flex-grow: 1;\r\n    border: 0;\r\n    margin: 0;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst Tag = styled(({ label, onDelete, ...props }) => (\r\n    <div {...props}>\r\n        <span>{label}</span>\r\n        <CloseIcon id='x' onClick={onDelete} />\r\n    </div>\r\n))`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 24px;\r\n  margin: 2px;\r\n  line-height: 22px;\r\n  background-color: #fafafa;\r\n  border: 1px solid #e8e8e8;\r\n  border-radius: 2px;\r\n  box-sizing: content-box;\r\n  padding: 0 4px 0 10px;\r\n  outline: 0;\r\n  overflow: hidden;\r\n\r\n  #x {\r\n      font-size:25px;\r\n  }\r\n\r\n  &:focus {\r\n    border-color: #40a9ff;\r\n    background-color: #e6f7ff;\r\n  }\r\n\r\n  & span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  & svg {\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n  }\r\n`;\r\n\r\nconst Listbox = styled('ul')`\r\n  width: 300px;\r\n  margin: 2px 0 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  list-style: none;\r\n  background-color: #fff;\r\n  overflow: auto;\r\n  max-height: 250px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  z-index: 1;\r\n\r\n  & li {\r\n    padding: 5px 12px;\r\n    display: flex;\r\n\r\n    & span {\r\n      flex-grow: 1;\r\n    }\r\n\r\n    & svg {\r\n      color: transparent;\r\n    }\r\n  }\r\n\r\n  & li[aria-selected='true'] {\r\n    background-color: #fafafa;\r\n    font-weight: 600;\r\n\r\n    & svg {\r\n      color: #1890ff;\r\n    }\r\n  }\r\n\r\n  & li[data-focus='true'] {\r\n    background-color: #e6f7ff;\r\n    cursor: pointer;\r\n\r\n    & svg {\r\n      color: #000;\r\n    }\r\n  }\r\n`;\r\n\r\n// 오늘 날짜\r\nconst today = new Date();\r\n\r\n// 게시글 작성\r\nconst Camp_review_write = () => {\r\n    // 알림창\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // 빈칸 방지\r\n    const classes = useStyles();\r\n    const [openBar, setOpenBar] = React.useState(false);\r\n\r\n    const handleClickBar = () => {\r\n        setOpenBar(true);\r\n    };\r\n\r\n    const handleCloseBar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenBar(false);\r\n    };\r\n\r\n    let params = {};\r\n    window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(str, key, value) { params[key] = value; });\r\n\r\n    // 데이터 변수\r\n    const [writer_id, setWriterId] = useState(\"\");\r\n    const [board, setBoard] = useState(params.board);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    // 데이터 저장\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleClose();\r\n\r\n        // 빈칸 방지\r\n        if ((title == \"\" || content == \"\")){\r\n            handleClickBar();\r\n        }\r\n        else {\r\n            db.collection(\"postings\").add({\r\n                writer_id: firebase.auth().currentUser.uid,\r\n                board : board,\r\n                title: title,\r\n                content: content,\r\n                date: today.toLocaleString(),\r\n                like: 0,\r\n                visit: 0,\r\n            })\r\n                .then((docRef) => {\r\n                    window.location.href = \"/Camp_review_detail?board=\"+params.board+\"&id=\"+docRef.id;\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n\r\n            setWriterId(\"\");\r\n            setBoard(\"\");\r\n            setTitle(\"\");\r\n            setContent(\"\"); \r\n        }\r\n    };\r\n\r\n    // 엔터키\r\n    const keyHandleClickOpen = (e) => {\r\n        if (e.key == 'Enter') {\r\n            handleClickOpen();\r\n        }\r\n    }\r\n\r\n    // 렌더링\r\n    return (\r\n        <div className=\"Camp_review_write\">\r\n            <div className={classes.root}>\r\n                <Snackbar open={openBar} autoHideDuration={6000} onClose={handleCloseBar}>\r\n                    <Alert onClose={handleCloseBar} severity=\"error\">\r\n                        빈칸 없이 입력해주세요\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n            <div className=\"sidebarclass\">\r\n            <aside class=\"sidebar\" >\r\n                <ul class=\"category_camp\">\r\n                        <li><a href=\"/Camp_review_main?board=알고리즘\">알고리즘</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=웹프로그래밍\">웹프로그래밍</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=데이터 분석\">데이터분석</a></li>\r\n                        <li><a href=\"/Camp_review_main?board=AI\">AI</a></li>\r\n                    </ul>\r\n              </aside>\r\n            </div>\r\n            <article class=\"article\">\r\n                <Paper classname=\"paper\" elevation={3}>\r\n                <div class=\"category_name\">\r\n                    <span style={{fontSize:\"16px\"}}>{decodeURI(params.board)}</span>\r\n                </div>\r\n                    <form className=\"form\" onSubmit={handleSubmit}>\r\n                        <section id=\"lecture-name\" class=\"writing-block\">\r\n                            <div id='review'>\r\n                                <div id=\"review_header\">\r\n                                    <span id=\"title\">제목 : </span>\r\n                                    <input id=\"title_input\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                                </div>\r\n                                <hr id=\"line\"/>\r\n                                <div id=\"write_box\">\r\n                                    <input id=\"input\" type=\"text\" value={content} onChange={(e) => setContent(e.target.value)}/>\r\n                                </div>\r\n                                <hr id=\"line\"/>\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section id=\"submit-button\">\r\n                            <Button variant=\"contained\" onClick={handleClickOpen} onKeyPress={keyHandleClickOpen}>글 작성</Button>\r\n                            <Dialog\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                            >\r\n                                <DialogTitle id=\"alert-dialog-title\">{\"리뷰 작성\"}</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText id=\"alert-dialog-description\">\r\n                                        리뷰를 저장하시겠습니까?\r\n                                        </DialogContentText>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose} color=\"primary\">취소</Button>\r\n                                    <Link to='/Camp_review_detail'><Button type=\"submit\" onClick={handleSubmit} color=\"primary\" autoFocus>확인</Button></Link>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </section>\r\n                    </form>\r\n                </Paper>\r\n            </article>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n// 태그 종류\r\nconst tagContent = [\r\n    { title: '#쉬워요 ' },\r\n    { title: '#적당해요 ' },\r\n    { title: '#어려워요 ' },\r\n    { title: '#효과적이에요 ' },\r\n    { title: '#전체구조를보여줘요 ' },\r\n    { title: '#실무적이에요' }\r\n];\r\n\r\nexport default Camp_review_write;\r\n","/home/songjh/Project/PReview/src/firebase.js",[],"/home/songjh/Project/PReview/src/canvasjs.react.js",["194"],"﻿/*\r\nCanvasJS React Charts - https://canvasjs.com/\r\nCopyright 2020 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;","/home/songjh/Project/PReview/src/canvasjs.min.js",[],"/home/songjh/Project/PReview/src/Solution_detail.js",["195","196","197","198","199","200","201","202"],"import React, { Component } from 'react';\r\nimport firebase from './firebase';\r\nimport { Select, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport './total.css';\r\nimport { db, auth } from './firebase';\r\n\r\nclass Solution_detail extends Component {\r\n    // Paper 태그 스타일\r\n    styles = ({ spacing: { unit } }) => ({\r\n        paper: {\r\n            margin: `${unit * 3}px auto`,\r\n            padding: unit * 2,\r\n            maxWidth: 400\r\n        }\r\n    })\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            isUid: false,\r\n            items: [],\r\n            content: \"\",\r\n            commentWriter_id: \"\",\r\n            posting_id: \"\",\r\n            date: new Date(),\r\n            commentName: \"\",\r\n            uid: \"\"\r\n        };\r\n    }\r\n\r\n    likeUpdate() {\r\n        let params = this.getUrlParams();\r\n        let edit = this.state.items.like;\r\n        console.log(edit);\r\n\r\n        db.collection(\"solution\").doc(params.id).update({\r\n            'like': edit + 1\r\n        }).then(() => {\r\n            window.location.reload(false);\r\n        })\r\n    }\r\n\r\n    getUrlParams() {\r\n        var params = {};\r\n        window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (str, key, value) { params[key] = value; });\r\n        return params;\r\n    }\r\n\r\n    componentWillMount() {\r\n        let params = this.getUrlParams();\r\n        let review = db.collection(\"solution\").doc(params.id);\r\n        this.setState({ posting_id: review.id });\r\n\r\n        review.get().then(res => {\r\n            this.setState({ items: res.data() });\r\n        });\r\n    }\r\n    // 렌더링 후 완료\r\n    componentDidMount = () => {\r\n        {\r\n            let params = this.getUrlParams();\r\n            let review = db.collection(\"solution\").doc(params.id).get().then(doc => {\r\n                firebase.auth().onAuthStateChanged(function (user) {\r\n                    {\r\n                        if (user) {\r\n                            this.setState({ uid: firebase.auth().currentUser.uid });\r\n\r\n                            if (doc.data().writer_id == this.state.uid) {\r\n                                this.setState({ isUid: true });\r\n                            }\r\n                            else {\r\n                                this.setState({ isUid: false });\r\n                            }\r\n                        }\r\n                        else {\r\n                            alert(\"로그인을 먼저 해주세요\");\r\n                        }\r\n                    }\r\n                }.bind(this)).bind(this);\r\n            });\r\n\r\n            db.collection(\"comments\")\r\n                .orderBy(\"date\", \"desc\")\r\n                .onSnapshot(snaps => {\r\n                    snaps.forEach(doc => {\r\n                        let posting = doc.data().posting_id;\r\n                        if (posting == this.state.posting_id) {\r\n                            const commentDiv = document.createElement(\"div\");\r\n\r\n                            let htmlContent;\r\n\r\n                            db.collection(\"users\").doc(doc.data().commentWriter_id).get()\r\n                                .then(ret => {\r\n                                    this.setState({ commentName: ret.data().nickname });\r\n                                    //console.log(ret.data().nickname);\r\n                                    htmlContent = this.MakeHTMLContent(ret.data().nickname, doc.data().content, doc.data().date);\r\n\r\n                                    commentDiv.innerHTML = htmlContent;\r\n                                    if (this.myRef != null) {\r\n                                        this.myRef.appendChild(commentDiv);\r\n                                    }\r\n                                })\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    MakeHTMLContent(name, content, date) {\r\n        let htmlContent =\r\n            \"<div class=\\\"review\\\">\\\r\n            <ul>\\\r\n                <li class=\\\"item\\\">\\\r\n                    <div class=\\\"comment_nickname\\\">\"+ name + \"</div>\\\r\n                    <div class=\\\"comment_content\\\">\"+ content + \"</div>\\\r\n                    <div class=\\\"comment_date\\\">\"+ date + \"</div>\\\r\n                </li>\\\r\n            </ul>\\\r\n        </div>\";\r\n\r\n        return htmlContent\r\n    }\r\n\r\n    // 데이터 저장\r\n    handleSubmitComment = (e) => {\r\n        e.preventDefault();\r\n\r\n        // 빈칸 방지\r\n        if (this.state.content == null) {\r\n            return;\r\n        }\r\n        else {\r\n            if (firebase.auth().currentUser) {\r\n                db.collection(\"comments\").add({\r\n                    commentWriter_id: firebase.auth().currentUser.uid,\r\n                    content: this.state.content,\r\n                    posting_id: this.state.posting_id,\r\n                    date: this.state.date.toLocaleString()\r\n                })\r\n                    .then(() => {\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(error.message);\r\n                    });\r\n\r\n                this.setState({ content: \"\" });\r\n            }\r\n            else {\r\n                alert(\"로그인을 먼저 해주세요\");\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteReview = () => {\r\n        {\r\n            let params = this.getUrlParams();\r\n            let review = db.collection(\"solution\").doc(params.id);\r\n\r\n            db.collection(\"solution\").doc(review.id).delete()\r\n                .then(() => {\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.message);\r\n                });\r\n\r\n\r\n        };\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n    render() {\r\n        let item = this.state.items;\r\n\r\n        let params = this.getUrlParams();\r\n        let board = decodeURI(params.board);\r\n\r\n        // 렌더링\r\n        return (\r\n            <div className=\"Camp_review_detail\">\r\n                <div className=\"sidebar\">\r\n                    <aside class=\"sidebar\">\r\n                        <ul class=\"category_camp\">\r\n                            <li><a href=\"/Solution_main?board=알고리즘\">솔루션</a></li>\r\n                        </ul>\r\n                    </aside>\r\n                </div>\r\n                <article>\r\n                    <Paper classname=\"paper\" elevation={3}>\r\n                        <div id=\"review_header\">\r\n                            <div id=\"review_title\">{item.title}</div>\r\n                            <div id=\"writer_info\">\r\n                                <span id=\"writer\">{item.writer_name}</span>\r\n                                <span id=\"date\">{item.date}</span>\r\n                            </div>\r\n                        </div>\r\n                        <hr id=\"line\" />\r\n                        <div id=\"review_content\">\r\n                            {item.content}\r\n                        </div>\r\n\r\n                        <div>\r\n                            {this.state.isUid ? (\r\n                                <>\r\n                                    <section id=\"submit-button\">\r\n                                        <Button variant=\"outlined\" onClick={this.handleClickOpen}>삭제</Button>\r\n                                        <Dialog\r\n                                            open={this.state.open}\r\n                                            onClose={this.handleClose}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            <DialogTitle id=\"alert-dialog-title\">{\"리뷰 삭제\"}</DialogTitle>\r\n                                            <DialogContent>\r\n                                                <DialogContentText id=\"alert-dialog-description\">\r\n                                                    리뷰를 삭제하시겠습니까?\r\n                                                    </DialogContentText>\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                                <Button onClick={this.handleClose} color=\"primary\">취소</Button>\r\n                                                <Link to={'/lecture_review_main?board=' + item.board}><Button type=\"submit\" onClick={this.deleteReview} color=\"primary\" autoFocus>확인</Button></Link>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                    </section>\r\n                                </>) : (\r\n                                    <>\r\n                                    </>)}\r\n                        </div>\r\n\r\n                        <hr id=\"line\" />\r\n\r\n                        <div class=\"comment_header\">\r\n                            <div class=\"comment_title\">댓글</div>\r\n                            <div>\r\n                                <button class=\"like\" onClick={() => { this.likeUpdate() }}><i class=\"far fa-heart\">♥</i></button>\r\n                                <span class=\"likepeople\">{item.like}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"comment_content\">\r\n                            <div id=\"comment\">\r\n                                <form className=\"form\" onSubmit={this.handleSubmitComment}>\r\n                                    <input id=\"input\" type=\"text\" value={this.state.content} onChange={(e) => this.setState({ content: e.target.value })}></input>\r\n                                    <Button variant=\"contained\" type=\"submit\" onClick={this.handleSubmitComment}>댓글 작성</Button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div class=\"item\" ref={(DOMNodeRef) => {\r\n                                this.myRef = DOMNodeRef;\r\n                            }}></div>\r\n                        </div>\r\n                    </Paper>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Solution_detail;\r\n","/home/songjh/Project/PReview/src/Solution_write.js",["203","204","205","206","207","208","209","210","211","212","213","214","215"],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":14},{"ruleId":"220","severity":1,"message":"224","line":6,"column":16,"nodeType":"222","messageId":"223","endLine":6,"endColumn":21},{"ruleId":"225","severity":1,"message":"226","line":52,"column":13,"nodeType":"227","messageId":"228","endLine":52,"endColumn":111},{"ruleId":"229","severity":1,"message":"230","line":64,"column":92,"nodeType":"231","endLine":64,"endColumn":128},{"ruleId":"220","severity":1,"message":"232","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":14},{"ruleId":"220","severity":1,"message":"233","line":17,"column":9,"nodeType":"222","messageId":"223","endLine":17,"endColumn":20},{"ruleId":"234","severity":1,"message":"235","line":31,"column":9,"nodeType":"236","messageId":"237","endLine":40,"endColumn":10},{"ruleId":"234","severity":1,"message":"235","line":48,"column":9,"nodeType":"236","messageId":"237","endLine":56,"endColumn":10},{"ruleId":"238","severity":1,"message":"239","line":87,"column":39,"nodeType":"240","messageId":"241","endLine":87,"endColumn":41},{"ruleId":"238","severity":1,"message":"239","line":130,"column":15,"nodeType":"240","messageId":"241","endLine":130,"endColumn":17},{"ruleId":"238","severity":1,"message":"239","line":136,"column":15,"nodeType":"240","messageId":"241","endLine":136,"endColumn":17},{"ruleId":"220","severity":1,"message":"242","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":16},{"ruleId":"220","severity":1,"message":"243","line":6,"column":14,"nodeType":"222","messageId":"223","endLine":6,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":63,"column":9,"nodeType":"227","messageId":"228","endLine":109,"endColumn":10},{"ruleId":"220","severity":1,"message":"244","line":65,"column":17,"nodeType":"222","messageId":"223","endLine":65,"endColumn":23},{"ruleId":"225","severity":1,"message":"226","line":67,"column":21,"nodeType":"227","messageId":"228","endLine":81,"endColumn":22},{"ruleId":"238","severity":1,"message":"239","line":71,"column":54,"nodeType":"240","messageId":"241","endLine":71,"endColumn":56},{"ruleId":"238","severity":1,"message":"239","line":89,"column":37,"nodeType":"240","messageId":"241","endLine":89,"endColumn":39},{"ruleId":"220","severity":1,"message":"245","line":181,"column":13,"nodeType":"222","messageId":"223","endLine":181,"endColumn":18},{"ruleId":"220","severity":1,"message":"246","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"247","line":4,"column":17,"nodeType":"222","messageId":"223","endLine":4,"endColumn":23},{"ruleId":"248","severity":1,"message":"249","line":12,"column":9,"nodeType":"250","endLine":12,"endColumn":13},{"ruleId":"225","severity":1,"message":"226","line":22,"column":17,"nodeType":"227","messageId":"228","endLine":24,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":35,"column":42,"nodeType":"240","messageId":"241","endLine":35,"endColumn":44},{"ruleId":"251","severity":1,"message":"252","line":82,"column":5,"nodeType":"253","messageId":"241","endLine":91,"endColumn":6},{"ruleId":"229","severity":1,"message":"230","line":101,"column":40,"nodeType":"231","endLine":101,"endColumn":43},{"ruleId":"229","severity":1,"message":"254","line":103,"column":33,"nodeType":"231","endLine":103,"endColumn":45},{"ruleId":"229","severity":1,"message":"254","line":104,"column":33,"nodeType":"231","endLine":104,"endColumn":45},{"ruleId":"238","severity":1,"message":"239","line":137,"column":57,"nodeType":"240","messageId":"241","endLine":137,"endColumn":59},{"ruleId":"238","severity":1,"message":"239","line":194,"column":57,"nodeType":"240","messageId":"241","endLine":194,"endColumn":59},{"ruleId":"220","severity":1,"message":"255","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":16},{"ruleId":"220","severity":1,"message":"256","line":13,"column":13,"nodeType":"222","messageId":"223","endLine":13,"endColumn":18},{"ruleId":"220","severity":1,"message":"257","line":23,"column":13,"nodeType":"222","messageId":"223","endLine":23,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":143,"column":54,"nodeType":"240","messageId":"241","endLine":143,"endColumn":56},{"ruleId":"258","severity":1,"message":"259","line":220,"column":33,"nodeType":"231","endLine":220,"endColumn":44},{"ruleId":"229","severity":1,"message":"254","line":220,"column":33,"nodeType":"231","endLine":220,"endColumn":44},{"ruleId":"258","severity":1,"message":"259","line":222,"column":33,"nodeType":"231","endLine":222,"endColumn":44},{"ruleId":"229","severity":1,"message":"254","line":222,"column":33,"nodeType":"231","endLine":222,"endColumn":44},{"ruleId":"258","severity":1,"message":"259","line":224,"column":33,"nodeType":"231","endLine":224,"endColumn":44},{"ruleId":"229","severity":1,"message":"254","line":224,"column":33,"nodeType":"231","endLine":224,"endColumn":44},{"ruleId":"220","severity":1,"message":"256","line":29,"column":13,"nodeType":"222","messageId":"223","endLine":29,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":36,"column":9,"nodeType":"227","messageId":"228","endLine":82,"endColumn":10},{"ruleId":"238","severity":1,"message":"239","line":53,"column":38,"nodeType":"240","messageId":"241","endLine":53,"endColumn":40},{"ruleId":"238","severity":1,"message":"260","line":53,"column":107,"nodeType":"240","messageId":"241","endLine":53,"endColumn":109},{"ruleId":"220","severity":1,"message":"256","line":19,"column":13,"nodeType":"222","messageId":"223","endLine":19,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":26,"column":9,"nodeType":"227","messageId":"228","endLine":74,"endColumn":10},{"ruleId":"238","severity":1,"message":"239","line":43,"column":38,"nodeType":"240","messageId":"241","endLine":43,"endColumn":40},{"ruleId":"238","severity":1,"message":"260","line":43,"column":107,"nodeType":"240","messageId":"241","endLine":43,"endColumn":109},{"ruleId":"220","severity":1,"message":"256","line":19,"column":17,"nodeType":"222","messageId":"223","endLine":19,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":26,"column":13,"nodeType":"227","messageId":"228","endLine":74,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":43,"column":42,"nodeType":"240","messageId":"241","endLine":43,"endColumn":44},{"ruleId":"238","severity":1,"message":"260","line":43,"column":111,"nodeType":"240","messageId":"241","endLine":43,"endColumn":113},{"ruleId":"220","severity":1,"message":"261","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"262","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":26},{"ruleId":"220","severity":1,"message":"263","line":8,"column":5,"nodeType":"222","messageId":"223","endLine":8,"endColumn":13},{"ruleId":"220","severity":1,"message":"256","line":21,"column":13,"nodeType":"222","messageId":"223","endLine":21,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":29,"column":9,"nodeType":"227","messageId":"228","endLine":90,"endColumn":10},{"ruleId":"238","severity":1,"message":"239","line":52,"column":38,"nodeType":"240","messageId":"241","endLine":52,"endColumn":40},{"ruleId":"238","severity":1,"message":"260","line":52,"column":110,"nodeType":"240","messageId":"241","endLine":52,"endColumn":112},{"ruleId":"238","severity":1,"message":"260","line":52,"column":169,"nodeType":"240","messageId":"241","endLine":52,"endColumn":171},{"ruleId":"220","severity":1,"message":"242","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":16},{"ruleId":"220","severity":1,"message":"243","line":4,"column":14,"nodeType":"222","messageId":"223","endLine":4,"endColumn":18},{"ruleId":"220","severity":1,"message":"264","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":39},{"ruleId":"225","severity":1,"message":"226","line":79,"column":9,"nodeType":"227","messageId":"228","endLine":129,"endColumn":10},{"ruleId":"220","severity":1,"message":"244","line":81,"column":17,"nodeType":"222","messageId":"223","endLine":81,"endColumn":23},{"ruleId":"225","severity":1,"message":"226","line":83,"column":21,"nodeType":"227","messageId":"228","endLine":97,"endColumn":22},{"ruleId":"238","severity":1,"message":"239","line":87,"column":54,"nodeType":"240","messageId":"241","endLine":87,"endColumn":56},{"ruleId":"238","severity":1,"message":"239","line":105,"column":37,"nodeType":"240","messageId":"241","endLine":105,"endColumn":39},{"ruleId":"265","severity":1,"message":"266","line":121,"column":60,"nodeType":"267","messageId":"268","endLine":121,"endColumn":62},{"ruleId":"238","severity":1,"message":"239","line":121,"column":86,"nodeType":"240","messageId":"241","endLine":121,"endColumn":88},{"ruleId":"265","severity":1,"message":"266","line":121,"column":92,"nodeType":"267","messageId":"268","endLine":121,"endColumn":94},{"ruleId":"238","severity":1,"message":"239","line":121,"column":118,"nodeType":"240","messageId":"241","endLine":121,"endColumn":120},{"ruleId":"269","severity":1,"message":"270","line":243,"column":51,"nodeType":"271","endLine":243,"endColumn":63},{"ruleId":"220","severity":1,"message":"272","line":3,"column":20,"nodeType":"222","messageId":"223","endLine":3,"endColumn":25},{"ruleId":"220","severity":1,"message":"246","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":14},{"ruleId":"220","severity":1,"message":"273","line":11,"column":16,"nodeType":"222","messageId":"223","endLine":11,"endColumn":24},{"ruleId":"220","severity":1,"message":"274","line":13,"column":10,"nodeType":"222","messageId":"223","endLine":13,"endColumn":28},{"ruleId":"220","severity":1,"message":"275","line":14,"column":10,"nodeType":"222","messageId":"223","endLine":14,"endColumn":26},{"ruleId":"220","severity":1,"message":"276","line":21,"column":7,"nodeType":"222","messageId":"223","endLine":21,"endColumn":13},{"ruleId":"220","severity":1,"message":"277","line":183,"column":12,"nodeType":"222","messageId":"223","endLine":183,"endColumn":21},{"ruleId":"220","severity":1,"message":"278","line":184,"column":12,"nodeType":"222","messageId":"223","endLine":184,"endColumn":23},{"ruleId":"220","severity":1,"message":"279","line":194,"column":12,"nodeType":"222","messageId":"223","endLine":194,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":203,"column":27,"nodeType":"240","messageId":"241","endLine":203,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":281,"column":19,"nodeType":"240","messageId":"241","endLine":281,"endColumn":21},{"ruleId":"220","severity":1,"message":"272","line":3,"column":20,"nodeType":"222","messageId":"223","endLine":3,"endColumn":25},{"ruleId":"220","severity":1,"message":"242","line":3,"column":27,"nodeType":"222","messageId":"223","endLine":3,"endColumn":33},{"ruleId":"220","severity":1,"message":"280","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":23},{"ruleId":"220","severity":1,"message":"281","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":17},{"ruleId":"220","severity":1,"message":"276","line":19,"column":7,"nodeType":"222","messageId":"223","endLine":19,"endColumn":13},{"ruleId":"220","severity":1,"message":"282","line":35,"column":7,"nodeType":"222","messageId":"223","endLine":35,"endColumn":19},{"ruleId":"220","severity":1,"message":"283","line":59,"column":7,"nodeType":"222","messageId":"223","endLine":59,"endColumn":10},{"ruleId":"220","severity":1,"message":"284","line":100,"column":7,"nodeType":"222","messageId":"223","endLine":100,"endColumn":14},{"ruleId":"220","severity":1,"message":"277","line":181,"column":12,"nodeType":"222","messageId":"223","endLine":181,"endColumn":21},{"ruleId":"238","severity":1,"message":"239","line":192,"column":20,"nodeType":"240","messageId":"241","endLine":192,"endColumn":22},{"ruleId":"238","severity":1,"message":"239","line":192,"column":37,"nodeType":"240","messageId":"241","endLine":192,"endColumn":39},{"ruleId":"238","severity":1,"message":"239","line":221,"column":19,"nodeType":"240","messageId":"241","endLine":221,"endColumn":21},{"ruleId":"220","severity":1,"message":"285","line":296,"column":7,"nodeType":"222","messageId":"223","endLine":296,"endColumn":17},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","messageId":"241","fix":"289"},{"ruleId":"220","severity":1,"message":"242","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":16},{"ruleId":"220","severity":1,"message":"243","line":6,"column":14,"nodeType":"222","messageId":"223","endLine":6,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":63,"column":9,"nodeType":"227","messageId":"228","endLine":108,"endColumn":10},{"ruleId":"220","severity":1,"message":"244","line":65,"column":17,"nodeType":"222","messageId":"223","endLine":65,"endColumn":23},{"ruleId":"225","severity":1,"message":"226","line":67,"column":21,"nodeType":"227","messageId":"228","endLine":81,"endColumn":22},{"ruleId":"238","severity":1,"message":"239","line":71,"column":54,"nodeType":"240","messageId":"241","endLine":71,"endColumn":56},{"ruleId":"238","severity":1,"message":"239","line":89,"column":37,"nodeType":"240","messageId":"241","endLine":89,"endColumn":39},{"ruleId":"220","severity":1,"message":"245","line":180,"column":13,"nodeType":"222","messageId":"223","endLine":180,"endColumn":18},{"ruleId":"220","severity":1,"message":"272","line":3,"column":20,"nodeType":"222","messageId":"223","endLine":3,"endColumn":25},{"ruleId":"220","severity":1,"message":"242","line":3,"column":27,"nodeType":"222","messageId":"223","endLine":3,"endColumn":33},{"ruleId":"220","severity":1,"message":"280","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":23},{"ruleId":"220","severity":1,"message":"281","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":17},{"ruleId":"220","severity":1,"message":"276","line":19,"column":7,"nodeType":"222","messageId":"223","endLine":19,"endColumn":13},{"ruleId":"220","severity":1,"message":"282","line":35,"column":7,"nodeType":"222","messageId":"223","endLine":35,"endColumn":19},{"ruleId":"220","severity":1,"message":"283","line":59,"column":7,"nodeType":"222","messageId":"223","endLine":59,"endColumn":10},{"ruleId":"220","severity":1,"message":"284","line":100,"column":7,"nodeType":"222","messageId":"223","endLine":100,"endColumn":14},{"ruleId":"220","severity":1,"message":"277","line":181,"column":11,"nodeType":"222","messageId":"223","endLine":181,"endColumn":20},{"ruleId":"220","severity":1,"message":"278","line":182,"column":11,"nodeType":"222","messageId":"223","endLine":182,"endColumn":22},{"ruleId":"238","severity":1,"message":"239","line":193,"column":19,"nodeType":"240","messageId":"241","endLine":193,"endColumn":21},{"ruleId":"238","severity":1,"message":"239","line":193,"column":36,"nodeType":"240","messageId":"241","endLine":193,"endColumn":38},{"ruleId":"238","severity":1,"message":"239","line":228,"column":19,"nodeType":"240","messageId":"241","endLine":228,"endColumn":21},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'user' is assigned a value but never used.","'clearInputs' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Select' is defined but never used.","'auth' is defined but never used.","'review' is assigned a value but never used.","'board' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","no-dupe-class-members","Duplicate name 'printStar'.","MethodDefinition","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'firebase' is defined but never used.","'exist' is assigned a value but never used.","'title' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","Expected '!==' and instead saw '!='.","'Component' is defined but never used.","'ContactsOutlined' is defined but never used.","'CanvasJS' is assigned a value but never used.","'ControlPointDuplicateOutlined' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'NoSsr' is defined but never used.","'Redirect' is defined but never used.","'SentimentSatisfied' is defined but never used.","'faWindowMinimize' is defined but never used.","'styles' is assigned a value but never used.","'writer_id' is assigned a value but never used.","'writer_name' is assigned a value but never used.","'like' is assigned a value but never used.","'useAutocomplete' is defined but never used.","'CheckIcon' is defined but never used.","'InputWrapper' is assigned a value but never used.","'Tag' is assigned a value but never used.","'Listbox' is assigned a value but never used.","'tagContent' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"292","text":"293"},"no-global-assign","no-unsafe-negation",[-1,0],""]